!!!!!!!!!!!!!!!
!!  ATTRIBUTE CATEGORIES
!!!!!!!!!!!!!!!

function = "@+FAUXV" "@\+FAUXV" "@\+FMAINV" "@+FMAINV" "@-F←ADVL" "@-F←ADVL-ine" "@-F←ADVL-ela" "@-F←OBJ" "@-F←OPRED" "@-F←SUBJ" "@-FADVL→" "@-FAUXV" "@-FMAINV" "@-FOBJ→" "@-FSUBJ→" "@←ADVL" "@←ADVL-ela" "@←ADVL-ine" "@←OBJ" "@←OPRED" "@←PPRED" "@←SPRED" "@←SUBJ" "@→A" "@→ADVL" "@→CC" "@→N" "@→Num" "@→P" "@→Pron" "@A←" "@ADVL" "@ADVL←" "@ADVL→" "@ADVL-ela→" "@ADVL-ine→" "@ADVLcs-ela→" "@ADVLcs-ine→" "@ADVLqst-ela→" "@ADVLqst-ine→" "@ADVLhab→" "@←ADVLhab" "@←SUBJext" "@ADVL→CS" "@APP-ADVL←" "@APP-N←" "@APP-Pron←" "@CNP" "@COMP-CS←" "@CVP" "@HNOUN" "@INTERJ" "@N←" "@Num←" "@OBJ→" "@OPRED→" "@P←" "@PCLE" "@Pron←" "@SPRED←OBJ" "@SPRED→" "@SUBJ→" "@VOC" "@X"  ;
gender = f m ;
number = sg du pl ;
prn_type_other = rel dem ind itg res ;
prn_type = pers ref [prn_type_other] ;
np_type_other = top cog org sem_ani ;
np_type = ant [np_type_other] ;
n_type = g3 nomag coll ;
acr = acr ;
num_type = arab ;
sentinit = sentinit ;
adj_type = ord ;
abbr = abbr ;
gramtag = gram_tabbr gram_iabbr gram_numnoabbr gram_tnumabbr  ; 
gramtnumabbr = gram_tnumabbr ;
case = acc nom gen loc ine ela com ess ill ;
comine = com ine ;
poss = ("" "") px1sg px1du px1pl px2sg px2du px2pl px3sg px3du px3pl ;
person = p1 p2 p3 ;
attr = attr ;
inf = inf ;
foc = foc_neg-ge foc_pos-ge foc_neg-k foc_pos-k ;
comp = der_comp der_superl ;
infin = supn inf prfprc vabess prsprc ger "actio.ess" "actio.gen" "actio.loc" "actio.ela" "actio.ess" ;
conneg = conneg ;
actiocase = "actio.ess" "actio.gen" "actio.loc" "actio.ela" ;
actioloc = "actio.loc" ;
actioela = "actio.ela" ;
neg = neg ;
qst = qst ;
cltl = cltl ;
trans = tv iv ;
mood = indic imp cond pot ;
mood_tense = "pot.pres" "cond.pres" ;
tense = pres pret ;
a_nomag = nomag ;
a_actio = actio ;
a_hab = ←hab→ ;
adpos = pr post ;
marks = cm sent ;
cc = cnjcoo ;
cs = cnjsub ;
pcle = pcle ;
a_vuota = ex_attr ;
person_number = "p1.sg" "p1.du" "p1.pl"
                "p2.sg" "p2.du" "p2.pl"
                "p3.sg" "p3.du" "p3.pl" ;
first_sec_person_number = "p1.sg" "p1.du" "p1.pl" "p2.sg" "p2.du" "p2.pl" ;
                
deriv = der_aadv der_adda der_ahkes der_ahtes der_ahtja der_ahtte der_ahttjá der_ahtti der_alla der_asste der_car der_caus der_d der_dahka der_dahtte der_dalla der_dasste der_dibme der_dimin der_duhtte der_duvva der_geahtes der_h der_halla der_inchl der_k der_l der_laagasj der_laakan der_ladda der_lahtte der_lasj der_lasste der_lágan der_lágán der_lis der_muš der_mus der_n der_nammasaš der_nammasasj der_nomact der_nomag der_nominstr der_passd der_passl der_passs der_r der_saš der_sasj der_segak der_st der_stahtte der_stalla der_stasste der_t der_tj der_u_a_åd der_vuota ;

deriv2 = der_dimin der_alla der_halla ;
pass = der_passl der_passs der_passd ;
v2n = der_dahka der_mus der_muš der_nomact der_nomag der_nominstr der_r ;
v2v = der_adda der_ahtti der_ahtja der_ahttjá der_alla der_asste der_caus der_d der_dahtte der_dalla der_dasste der_duhtte der_duvva der_h der_halla der_inchl der_l der_ladda der_lahtte der_lasste der_passd der_passl der_passs der_st der_stahtte der_stalla der_stasste der_tj der_u_a_åd ;
np2n = der_k ;
v2adj = der_lis der_ahkes  ;
n2n = der_dimin ;
n2adj = der_ahtes der_car der_geahtes der_lasj der_n der_sasj der_segak ; 
adj2n = der_vuota ;
adj2adv = der_aadv ;
cmp = cmp_sggen cmp_sgnom cmp_attr cmp_plgen cmp_sh cmp_oblhyph cmp_cit ;
hyph = cmp_hyph ;
onlycmp = cmp ;
cmpsplitr = cmp_splitr ;

semhum = sem_group sem_hum sem_hum-abstr sem_hum-prof sem_act_hum sem_ani_body-abstr_hum sem_ani_build_hum_txt sem_ani_group_hum sem_ani_hum sem_ani_hum_plc sem_ani_hum_time sem_aniprod_hum sem_body_group_hum sem_body_group_hum_time sem_body_hum sem_cat_group_hum sem_cat_group_hum_plc sem_clth_hum sem_domain_hum sem_edu_group_hum sem_edu_hum sem_event_hum sem_feat-psych_hum sem_fruit_hum sem_geom_hum_plc sem_group_hum sem_group_hum_org sem_group_hum_plc sem_group_hum_plc-abstr sem_group_hum_prod-vis sem_group_hum_time sem_hum_lang sem_hum_lang_plc sem_hum_lang_time sem_hum_mat_tool sem_hum_obj sem_hum_org sem_hum_part sem_hum_plant sem_hum_plc sem_hum_sign sem_hum_tool sem_hum_tool-it sem_hum_veh sem_hum_wthr ;

semtime = sem_time sem_time-clock sem_ani_hum_time sem_ani_time sem_body_group_hum_time sem_body_time sem_event_time sem_group_hum_time sem_hum_lang_time sem_measr_obj_time sem_measr_time sem_plc_time sem_plc_time_wthr sem_time_wthr ;

semother = sem_act sem_adr sem_amount sem_ani sem_aniprod sem_body sem_body-abstr sem_build sem_build-room sem_buildpart sem_cat sem_clth sem_clth-jewl sem_clthpart sem_ctain sem_ctain-abstr sem_ctain-clth sem_curr sem_date sem_dance sem_dir sem_domain sem_drink sem_dummytag sem_edu sem_event sem_feat sem_feat-phys sem_feat-psych sem_feat-measr sem_fem sem_food sem_food-med sem_fruit sem_furn sem_game sem_geom sem_ideol sem_id sem_lang sem_mal sem_mat sem_measr sem_money sem_obj sem_obj-clo sem_obj-cogn sem_obj-el sem_obj-ling sem_obj-rope sem_obj-surfc sem_org sem_part sem_perc-cogn sem_perc-emo sem_perc-phys sem_perc-psych sem_phonenr sem_plant sem_plantpart sem_plc sem_plc-abstr sem_plc-elevate sem_plc-line sem_plc-water sem_pos sem_process sem_prod sem_prod-audio sem_prod-cogn sem_prod-ling sem_prod-vis sem_rel sem_route sem_rule sem_semcon sem_sign sem_sport sem_state sem_state-sick sem_substnc sem_sur sem_symbol sem_tool sem_tool-catch sem_tool-clean sem_tool-it sem_tool-measr sem_tool-music sem_tool-write sem_txt sem_veh sem_wpn sem_wthr sem_year sem_act_fruit sem_act_group sem_act_plc sem_act_route sem_act_tool-it sem_amount_build sem_amount_semcon sem_ani_build sem_ani_buildpart sem_ani-fish sem_ani_group sem_ani_group_prod-vis sem_ani_plc sem_ani_plc_txt sem_ani_veh sem_aniprod_obj-clo sem_aniprod_perc-phys sem_aniprod_plc sem_aniprod_plc_route sem_body-abstr_feat-psych sem_body-abstr_prod-audio_semcon sem_body_body-abstr sem_body_clth sem_body_food sem_body_mat sem_body_measr sem_body_obj_tool-catch sem_body_plc sem_body_plc-elevate sem_build_clthpart sem_build_edu_org sem_build_event_org sem_build_obj sem_build_org sem_build_route sem_build-room_cat_ctain_mat sem_buildpart_cat sem_buildpart_cat_ctain sem_buildpart_cat_ctain_mat sem_buildpart_ctain sem_buildpart_ctain_mat sem_buildpart_ctain_obj sem_cat_edu sem_cat_obj sem_clth-jewl_curr sem_clth-jewl_curr_obj sem_clth-jewl_curr_obj_org sem_clth-jewl_fruit sem_clth-jewl_money sem_clth-jewl_plant sem_clth_obj-clo sem_ctain-abstr_org sem_ctain-clth_plant sem_ctain-clth_veh sem_ctain_feat-phys sem_ctain_furn sem_ctain_plc sem_ctain_tool sem_ctain_tool-measr sem_curr_org sem_dance_org sem_dance_prod-audio sem_domain_food-med sem_domain_prod-audio sem_drink_plant sem_edu_event sem_edu_geom sem_edu_mat sem_edu_org sem_event_food sem_event_plc sem_event_plc-elevate sem_feat-measr_plc sem_feat-phys_tool-write sem_feat-phys_veh sem_feat-phys_wthr sem_feat-psych_plc sem_food_obj-surfc sem_feat_plant sem_food_perc-phys sem_food_plant sem_food_sign sem_game_obj-play sem_geom_obj sem_group_org sem_group_prod-vis sem_group_sign sem_group_txt sem_lang_tool sem_mat_plant sem_mat_txt sem_measr_sign sem_money_obj sem_money_org sem_money_part sem_money_txt sem_obj-play sem_obj-play_sport sem_obj_semcon sem_obj_sign sem_obj_veh sem_clth-jewl_org sem_obj_symbol sem_org_rule sem_org_buildpart sem_org_txt sem_org_veh sem_part_prod-cogn sem_part_substnc sem_perc-emo_wthr sem_plant_plantpart sem_plant_tool sem_plant_tool-measr sem_plc-abstr_rel_state sem_plc-abstr_route sem_plc_pos sem_plc_route sem_plc_semcon sem_plc_state sem_plc_substnc sem_plc_substnc_wthr sem_plc_tool-catch sem_plc_txt sem_plc_wthr sem_prod-audio_txt sem_prod-cogn_txt sem_semcon_txt sem_obj_state sem_substnc_wthr sem_state-sick_substnc sem_obj-ling_obj-surfc sem_org_prod-audio sem_org_prod-cogn sem_org_prod-vis ;

semtag = [semtime] [semhum] [semother] ;

!!!!!!!!!!!!!!!
!! OUTPUT PATTERNS
!!!!!!!!!!!!!!!

VP: _.mood.tense.person.number.infin ; !?
V: _.mood.tense.person.number.infin.function.sentinit ; !?
NegVP:  _.neg.mood.tense.conneg.function ;
NP: _.number.case.poss.cmp.hyph.onlycmp.foc.function ; 
PRN: _.prn_type.person.number.case.poss.attr.foc.sentinit.function ; 
S: _.function ; !?
InfinS: _ ;
AdvP: _.abbr.poss.function ;
A: _ ;
AP: _ ;
PP: _ ;
C: _ ;
PCLE: _ ;
CLB: _ ;
cm: _ ;
sent: _ ;

cnjcoo: _ ;
cnjsub: _ ;
Name: _.np_type.number.case.function ; 
N: _.number.case.poss.cmp.hyph.onlycmp.function ; 
n_only: <n>.acr.number.case.attr.poss.cmp.hyph.cmpsplitr.onlycmp ; 
n_abbr: <n>.abbr.gramtag.number.case.attr.hyph.cmpsplitr.onlycmp ;  !!! 
n_abbr_hyph: <n>.abbr.number.case.attr.hyph.onlycmp ;  !!! bare gramtnumabbr
n_abbr_splitr: <n>.abbr.cmp.cmpsplitr.onlycmp ;  !!! bare gramtnumabbr
ntype: <n>.n_type.number.case.poss.cmp.hyph.cmpsplitr.onlycmp ; 
nsplitr: <n>.n_type.cmp.cmpsplitr.onlycmp ; 
n_n: <n>.deriv.<n>.number.case.poss.cmp.hyph.onlycmp ;
n_type_n: <n>.n_type.deriv.<n>.number.case.poss.cmp.hyph.onlycmp ;
n_adj: <n>.deriv.<adj>.number.case.attr.poss.cmp.hyph.onlycmp ;
n_comp: <n>.comp.<adj>.number.case.attr.poss.cmp.hyph.onlycmp ;
n_adj_n:<n>.n2adj.<adj>.adj2n.<n>.number.case.poss.cmp.hyph.onlycmp ;


n: (if (1.abbr=abbr and 1.hyph = cmp_hyph) 1(n_abbr_hyph)
      elif (1.abbr=abbr and 1.cmpsplitr = cmp_splitr) 1(n_abbr_splitr)
      elif (1.abbr=abbr and 1.hyph="") 1(n_abbr)
      elif (1.pos_tag/tl=np and 1.deriv in np2n) 1(np_n)
      elif (1.pos_tag/tl=np) 1(np_other)
      elif (1.pos_tag/tl=prn) 1(prn_other)
      elif (1.pos_tag/tl=adj) 1(adj_pred)
      elif (1.pos_tag/tl=vblex) 1(vblex_n)
      elif (1.n_type/tl in n_type and 1.deriv in n2n) 1(n_type_n) 
      elif (1.n_type/tl in n_type) 1(ntype) 
      elif (1.deriv in n2n) 1(n_n)
      elif (1.n2adj in n2adj and 1.adj2n in adj2n) 1(n_adj_n)
      elif (1.deriv in n2adj) 1(n_adj)
      elif (1.comp in comp) 1(n_comp)
      else 1(n_only)) ;


post: _ ;
pr: _ ;
adpos: _ ;
qst: _ ;
pcle : _.qst ;
adv_only: _.abbr.gramtag.poss ;
adv_to_noun: <n>.number.case ;
adv_to_adj: <adj>.number.case.attr ;

adv: (if (1.pos_tag/tl=n) 1(adv_to_noun)
     if (1.pos_tag/tl=adj) 1(adv_to_adj)
     else 1(adv_only)) ;


num_only: _.num_type.number.case.attr.cmp.hyph.cmpsplitr.onlycmp ;
num: (if (1.pos_tag/tl=prn) 1(prn_other)
	  else 1(num_only)) ;

np_ant: <np>.<ant>.gender.number.case.attr.cmp.hyph.onlycmp ;
np_other: <np>.acr.number.case.attr.cmp.hyph.onlycmp ;
np_n: <np>.deriv.<n>.number.case ;
np: (if (1.np_type = ant) 1(np_ant)
     elif (1.deriv in np2n) 1(np_n)
      else 1(np_other)) ;

prn_pers: <prn>.<pers>.person.number.case ;
prn_ref: <prn>.<ref>.number.case.poss ;
prn_res: <prn>.<res>.case.person.number ;

prn_other: <prn>.prn_type_other.number.case.attr.foc ;
prn: (if (1.prn_type = pers) 1(prn_pers)
      elif (1.prn_type = ref) 1(prn_ref)
      elif (1.pos_tag/tl=adj) 1(adj_attr)
      elif (1.pos_tag/tl=n) 1(adj_to_n)
      else 1(prn_other)) ;

adj_to_noungen: <n>.n_type.<sg>.<gen> ;
adj_attr: <adj>.num_type.adj_type.attr.cmp.cmpsplitr.onlycmp ;
adj_pred: <adj>.adj_type.number.case.poss.cmp.cmpsplitr.onlycmp ;
adj_comp: <adj>.comp.<adj>.number.attr.case.poss.cmp.onlycmp ;
adj_adv_comp:<adj>.comp.<adj>.<der_aadv>.<adv> ;
adj_adv:_.<der_aadv>.<adv> ;
adj_to_n: <n>.<sg>.<nom> ; 

adj: (if (1.pos_tag/tl=n and 1.case/tl=gen) 1(adj_to_noungen)
     elif (1.pos_tag/tl=n) 1(adj_to_n)
     elif (1.pos_tag/tl=prn) 1(prn_other)
     elif (1.pos_tag/tl=vblex) 1(vblex_infin)
     elif (1.deriv = der_aadv and 1.comp ="") 1(adj_adv)
     elif (1.deriv = der_aadv and 1.comp in comp) 1(adj_adv_comp)
     elif (1.adj2adv = "" and 1.comp in comp) 1(adj_comp) 
     elif (1.attr = attr) 1(adj_attr)
     else 1(adj_pred)) ;
     
vblex_fin: <vblex>.neg.mood.tense.person.number.qst ; 
vblex_liehket_fin: <vblex>.neg.mood.tense.person.number.qst.sentinit ; 
vblex_infin: <vblex>.tense.infin ;
vblex_conneg: <vblex>.mood.conneg ;
vblex_liehket_conneg: <vblex>.mood.tense.conneg ;
vblex_mood2: <vblex>.neg.mood.person.number.qst ;
vblex_n: <vblex>.v2n.<n>.number.case.poss.cmp.onlycmp ;
vblex_vblex: <vblex>.v2v.<vblex>.mood.infin.tense.person.number.qst ;
vblex_vblex_n: <vblex>.v2v.<vblex>.v2n.<n>.number.case.poss.cmp.onlycmp ;
vblex_n_adj: <vblex>.v2n.<n>.n2adj.<adj>.attr ;
vblex_vblex_conneg: <vblex>.v2v.<vblex>.mood.conneg ;
vblex_to_adj: <adj>.attr.number.case ;

vblex: (if (1.v2v in v2v and 1.v2n in v2n) 1(vblex_vblex_n)
        elif (1.deriv in v2v  and 1.conneg = "") 1(vblex_vblex)
        elif (1.deriv in v2v and 1.conneg = conneg) 1(vblex_vblex_conneg)
        elif (1.v2n in v2n and 1.n2adj in n2adj) 1(vblex_n_adj)
        elif (1.deriv in v2n) 1(vblex_n)
        elif (1.pos_tag/tl=adv) 1(adv_only)
        elif (1.conneg = conneg and 1.lem/tl = liehket and 1.mood = "indic") 1(vblex_liehket_conneg)
        elif (1.conneg = conneg) 1(vblex_conneg)
        elif (1.mood = "cond" or 1.mood = "pot") 1(vblex_mood2)
        elif (1.infin = "" and 1.lem/tl equal-cl liehket) 1(vblex_liehket_fin)
        elif  (1.infin = "") 1(vblex_fin)
        elif (1.pos_tag/tl=adj) 1(vblex_to_adj)
        else 1(vblex_infin)
       ) ;


!!!!!!!!!!!!!!!
!! TAG-REWRITE RULES
!!!!!!!!!!!!!!!

!person_number > poss : "p1.sg" px1sg, "p1.du" px1du, "p1.pl" px1pl,
!                       "p2.sg" px2sg, "p2.du" px2du, "p2.pl" px2pl,
!                       "p3.sg" px3sg, "p3.du" px3du, "p3.pl" px3pl ;
!poss > person_number : px1sg "p1.sg", px1du "p1.du", px1pl "p1.pl",
!                            px2sg "p2.sg", px2du "p2.du", px2pl "p2.pl",
!                            px3sg "p3.sg", px3du "p3.du", px3pl "p3.pl" ;
! a rule for converting person+number tag pairs to possessive tags
! this applies if you write poss=1.person_number or 1.person_number>poss
! "" because these are pairs instead of single tags

poss > person : px1sg p1, px1du p1, px1pl p1,
                px2sg p2, px2du p2, px2pl p2,
                px3sg p3, px3du p3, px3pl p3 ;

poss > number : px1sg sg, px1du du, px1pl pl,
                px2sg sg, px2du du, px2pl pl,
                px3sg sg, px3du du, px3pl pl ;

!actiocase > actiocase : "actio.loc" "actio.ela" ;

case > case : loc ine ;
foc > foc : foc_pos-ge foc_pos-k, foc_neg-ge foc_neg-k ; !from sme to smj type
deriv > deriv : der_halla der_dalla ;

!!!!!!!!!!!!!!!
!! REDUCTION RULES
!!!!!!!!!!!!!!!

kin-nouns = "ieddne" "niejdda" "báhttja" "áhttje" "áhkko" "áddjá" "viellja" "oabbá" ;

foclemmas = "okta" ;

not-move-adv = "aj" "duodaj" "vargga" "náv" "nav" "gal" "de" ;

smj-supn-triggerverbs = "bivddit" "barggat" "dahkat" "hásstalit" "vælggogissan dahkat" "ávvudallat" "ávttjit" "geatnegahttit" "åhtsåt" "ohcat" ;

adj_nottriggingsupn = "álkke" "hiebalasj" "suohtas" "vájvve" "guhkálasj" "ahket" "ájnas" "gássjel" "tjiehppe" "váttis" ;

not-usually-supn-verbs = "subtsastit" "åvddånit" ;

sme-rek-verbs = "lijkkut" "berustit" "ballat" ;

moveverbs = "vuolgget" "mannat" "bisánit" ;

copulas = "liehket" "leat" "šaddat" "sjaddat" ;
liehket = "liehket" ;
ij = "ij" ;


actio_ill_verbs = "liikot" ;
loc2acc_verbs = "guossidit" ;
ill2ine_verbs = "báhtset" "báhcit" ;
birrapx_verbs = "geahččat" ;
loc_verbs = "hållat" "subtsastit" "ságastallat" "báhtset" "hupmat" "muitalit" "ságastallat" ;
muitalit_vblex = "subtsastit" "almodit" "javllat" "mierredit" ; 
hållat_verbs = "hållat" "ságastallat" ;
loc2ill_verbs = "sæbrrat" ;
acc2ela_verbs = "hieredit" ;
acc2ill_verbs = "vájkkudit" "tjágŋat" "guosskat" ;
com2ill_verbs = "vásstedit" "oktiivástidit" ;
loc2com_verbs = "rahtjat" ;
auxverbs = "máhttet" "sáhttit" "áigut" "ájádallat" "máhttit" "leat" "liehket" "galggat" "hæhttut" "ájggot" "sáhttit" "áiggut" ;
attrprn = "eará" "ietjá" "juohke" "juohkka" "dakkár" "iešguhte" "iesjguhti" "iešguhtet" "galle" "galla" "buot" "makkir" "makkár" "muhtem" "muhtin" ;
prnnotfocsme =  "mihkke" "guhtemuš" "iešguhtet" ;
prnnotfocsmj = "soames" "mige" ;
placetimeadv = "odne" "ikte" "ihttin" "dalle" "uddni" "idet" "iektu" "dalloj" "doppe" "gos" "gånnå" "álo" "ain" "ájn" ;

dadjat_verbs = "almmuhit" "almodit" "ballat" "čájehit" "dadjat" "doajvvot" "dovdat" "dåbddåt" "dåbddåt¹" "dåbdåstit" "gáibidit" "gájbbedit" "gielestit" "javllat" "jáhkket" "jáhkkit" "jurddahit" "jurddašit" "lohkat" "låhkåt" "meidnet" "meroštallat" "merustallat" "miejnnit" "mierredit" "muitalit" "oaidnit" "oaivvildit" "subtsastit" "sárnnot" "tjielggit" "tjuottjodit" "vuojnnet"  "vuornnot" "vuosedit"  ;

lohkat_verbs = "lohkat" "dadjat" "javllat" ; !ii loga váttisin

passshortverbs = "vuojnnet" ;

verb3st = "vájbbadit" "hiebadit" "sjaddadit" "gájddadit" "suddadit" "navddadit" "vavddadit" "gievddadit" "rievddadit" "háldadit" "niegadit" "jegadit" "segadit" "tsieggadit" "salggadit" "tjálggadit" "gærggadit" "ravggadit" "tjielgadit" "vuolgadit" "álgadit" "juogadit" "bargadit" "njágadit" "idjadit" "dádjadit" "biejadit" "goarjjadit" "tjuojadit" "gehtjadit" "gáhtjadit" "tjuottjadit" "báhkadit" "sáhkadit" "liekkadit" "tsiekkadit" "vikkadit" "davkkadit" "hávkkadit" "jávkkadit" "valkadit" "sjåpkadit" "jaskadit" "miesskadit" "guosskadit" "njuosskadit" "huvkadit" "gieladit" "bievlladit" "dibmadit" "semadit" "tjajmadit" "dåjmadit" "tjuolmadit" "nammadit" "almmadit" "tjalmmadit" "tjuolmmadit" "ármmadit" "gámadit" "dåmadit" "jiednadit" "viednadit" "vihpadit" "åhpadit" "låhpadit" "gahppadit" "sieradit" "bátsadit" "vuovsadit" "nahtadit" "giehtadit" "duhtadit" "ruhtadit" "láktadit" "mastadit" "asstadit" "masstadit" "goasstadit" "gástadit" "sjiehttadit" "suhttadit" "buvtadit" "åjvadit" "dálvadit" "livvadit" "oajvvadit" "suovvadit" "hærvvadit" "luvvadit" "sagŋadit" "loabedit" "gájbbedit" "álbedit" "hálbedit" "tjuorbedit" "gåbdedit" "diededit" "miededit" "bidedit" "vijdedit" "sirdedit" "åvdedit" "gåvdedit" "rádedit" "jådedit" "ráfedit" "irggedit" "bárggedit" "moalgedit" "tjuovgedit" "sjuvgedit" "bajedit" "ruodjedit" "galjedit" "sjivnnjedit" "givnjedit" "vuojedit" "galsjedit" "gietjedit" "miehtjedit" "bultjedit" "gártjedit" "loattjedit" "stávtjedit" "sloahkedit" "viehkedit" "sjuohkedit" "guhkedit" "gajkedit" "biesjkedit" "siekkedit" "bilkkedit" "rákkedit" "båkkedit" "njalkedit" "skoalkedit" "hielkedit" "baskedit" "tjoaskedit" "nuoskedit" "biesskedit" "tsuskedit" "nåskedit" "tsavkedit" "livkedit" "nivkedit" "bávkedit" "jaledit" "skoaledit" "tsieledit" "vieledit" "biledit" "bielledit" "vuoledit" "háledit" "tjáledit" "hábmedit" "galmmedit" "gåmedit" "banedit" "manedit" "oanedit" "loanedit" "guddnedit" "ienedit" "dienedit" "jienedit" "linedit" "riejnedit" "bijnedit" "binnedit" "sárnnedit" "unnedit" "gánnedit" "iehpedit" "giehpedit" "duoppedit" "dáppedit" "dåppedit" "smaredit" "goaredit" "goabredit" "ieredit" "hieredit" "vieredit" "buoredit" "stuoredit" "doarredit" "dierredit" "mierredit" "láhkamierredit" "lasedit" "lamsedit" "vuosedit" "dássedit" "joatsedit" "uhtsedit" "giettsedit" "váttsedit" "gåtsedit" "givsedit" "mávsedit" "másedit" "vásedit" "låsedit" "luohtedit" "hiejtedit" "goastedit" "koastedit" "vásstedit" "moattedit" "guottedit" "gáttedit" "davedit" "slijvedit" "rujvedit" "vájvedit" "gárvedit" "buolvvedit" "árvvedit" "maŋedit" "tjieŋedit" "sagŋedit" "sisŋedit" "sahkkidit" "tsahkkidit" "dåhkkidit" "tjåhkkidit" "validit" "gallidit" "viellidit" "buollidit" "ållidit" "dållidit" "háhppidit" "sjierridit" "ánssidit" "guossidit" "aktidit" "duolvvidit" "guggŋidit" "dåbdijdit" "bådijdit" "salgijdit" "njálgijdit" "gålgijdit" "njålgijdit" "gurgijdit" "bårgijdit" "jårgijdit" "tjuovgijdit" "risjijdit" "tjátjijdit" "smáhkijdit" "låsjkijdit" "mukkijdit" "tjåskijdit" "guosmijdit" "tsivnijdit" "dabrijdit" "jurijdit" "tjivrijdit" "suvrijdit" "gárijdit" "mårijdit" "habsijdit" "bisijdit" "hapsijdit" "guohtsijdit" "båhtsijdit" "njattijdit" "skilájdit" "imájdit" "vájaldit" "syhkaldit" "jakkaldit" "jiekkaldit" "suojvaldit" "bárggeldit" "tjuottjeldit" "åskeldit" "maneldit" "vuosteldit" "vatteldit" "naveldit" "sájveldit" "tjievvildit" "vajoldit" "budáldit" "ganjáldit" "biváldit" "njárbbodit" "tjábbodit" "noadodit" "vijddodit" "buojddodit" "vájddodit" "gærddodit" "suddodit" "vuododit" "bivdodit" "soaggodit" "lijggodit" "rájggodit" "nælggodit" "ålgodit" "gurgodit" "vágodit" "oadjodit" "vuodjodit" "lådjodit" "galljodit" "luojodit" "girjodit" "buossjodit" "rássjodit" "gártjodit" "tjuottjodit" "tsoahkodit" "suohkodit" "buojkodit" "næjkodit" "boakkodit" "biekkodit" "goalkodit" "tsoalkodit" "nuoskodit" "basskodit" "tjoasskodit" "båŋkodit" "boalodit" "allodit" "tjallodit" "goallodit" "sillodit" "juollodit" "vuollodit" "gálodit" "hibmodit" "fábmodit" "almodit" "ilmodit" "joajmmodit" "slæmmodit" "gåmodit" "binnodit" "sánodit" "gihpodit" "dæhppodit" "vuorodit" "garrodit" "irrodit" "hirrodit" "skirrodit" "gievrrodit" "divrrodit" "suvrrodit" "várrodit" "værrodit" "návrodit" "basodit" "hasodit" "bisodit" "guossodit" "låssodit" "hæssodit" "håhtsodit" "njátsodit" "viertodit" "goasstodit" "vasstodit" "ruosstodit" "hástodit" "dættodit" "ævtodit" "gárvodit" "livvodit" "tjiegŋodit" "slimbardit" "slåbardit" "skuoldardit" "vándardit" "tjiegardit" "guokkardit" "lillardit" "gabmardit" "giemardit" "sáŋardit" "náberdit" "skutjerdit" "gåbmerdit" "dieverdit" "skidárdit" "slidárdit" "tjagárdit" "gitjárdit" "gamárdit" "vitsárdit" "jårbudit" "rádudit" "ráfudit" "vielgudit" "gilgudit" "suorgudit" "tjuovgudit" "bahudit" "addjudit" "sjevnjudit" "gåhtjudit" "åttjudit" "måjudit" "tsehkudit" "rusjkudit" "vájkkudit" "låkkudit" "småkkudit" "vuorkudit" "viskudit" "tjeludit" "jalludit" "lásjmudit" "almmudit" "germudit" "gámudit" "ruonudit" "lånudit" "tjáhpudit" "smårudit" "ruopsudit" "juvsudit" "fásstudit" "dålvudit" "ávvudit" "vuorbbádit" "tjadádit" "noaddádit" "hávddádit" "bagádit" "lagádit" "riegádit" "fággádit" "virgádit" "snjurgádit" "mugádit" "mægádit" "rægádit" "risjádit" "gatjádit" "snjibtjádit" "tjiehkádit" "goajkádit" "jæskádit" "njoaládit" "ælládit" "suoládit" "tjajmádit" "tjanádit" "manádit" "tjáhppádit" "moarádit" "sirádit" "basádit" "muossádit" "gæssádit" "luojttádit" "mujttádit" "såjddådit" "nårddådit" "håjggådit" "tjålggådit" "dåssjådit" "gåttjådit" "måjådit" "tjåhkådit" "gåjkkådit" "tsåkkådit" "gållådit" "mållådit" "gålådit" "tjårmmådit" "bårådit" "håhtsådit" "åtsådit" "gåtsådit" "njåtsådit" "jåvsådit" "båsådit" "gåsådit" "jåttådit" "gåvådit" "dågŋådit" "sjánjagit" "bávtjagit" "ganugit" "dárbahit" "návddahit" "givnnjahit" "jalkkahit" "merkahit" "vellahit" "vællahit" "huomahit" "dabrrahit" "gahtsahit" "huhttahit" "vájvahit" "duodjuhit" "háhkuhit" "ræjnnuhit" "ruhtsuhit" "huomáhit" "tjåhkkåhit" "idatjit" "girdatjit" "vuordatjit" "bårdatjit" "bivdatjit" "ådatjit" "begatjit" "sjavnjatjit" "vuotjatjit" "bajkatjit" "belkatjit" "gáskatjit" "buolatjit" "gálatjit" "tjálatjit" "tsábmatjit" "bájnatjit" "bånatjit" "váratjit" "váttsatjit" "mávsatjit" "bájtatjit" "májstatjit" "åstatjit" "garvatjit" "harvatjit" "baldáskit" "vaddalit" "rijddalit" "guoddalit" "tjoavddalit" "bivddalit" "balldalit" "gulldalit" "válldalit" "tsirggalit" "gurggalit" "gárggalit" "suodjalit" "dådjalit" "doarjjalit" "várjjalit" "sáhtjalit" "gæhttjalit" "næjkkalit" "goalkkalit" "ravkkalit" "livkkalit" "nivkkalit" "gasskalit" "adnalit" "vuojnnalit" "bassalit" "diehtalit" "båhtalit" "biktalit" "buktalit" "nuktalit" "hásstalit" "bæsstalit" "bæhttalit" "gijttalit" "luojttalit" "mujttalit" "hæjttalit" "æjvvalit" "árvvalit" "dieddelit" "vuodjelit" "tjuodtjelit" "tjuovvolit" "skerrulit" "navválit" "gåddålit" "bårggålit" "jårggålit" "tsåggålit" "dådjålit" "råhkålit" "åhtsålit" "håhttsålit" "jåhtålit" "båktålit" "giddanit" "liegganit" "suorgganit" "sadjanit" "lahkanit" "sahkanit" "sehkanit" "tjåhkanit" "báhkkanit" "boarkkanit" "tsuovkkanit" "gibmanit" "almmanit" "rájnnanit" "hehpanit" "duohpanit" "sierranit" "njuorranit" "bæjsstanit" "luottanit" "hevvanit" "gæjvvanit" "luovvanit" "ålggunit" "bahunit" "hedjunit" "vádnunit" "nannunit" "guorrunit" "gárvvunit" "sjávvunit" "maŋŋunit" "duobbánit" "dábbánit" "vijddánit" "gáddánit" "rájggánit" "badjánit" "ádjánit" "hádjánit" "tjádjánit" "hárjjánit" "lassjánit" "boaktjánit" "gajkkánit" "hoavkkánit" "allánit" "gallánit" "doallánit" "vuollánit" "lullánit" "hállánit" "vællánit" "gæhppánit" "buorránit" "ærránit" "værránit" "bisánit" "lassánit" "bissánit" "guoktánit" "davvánit" "gárvvánit" "åvddånit" "gåvddånit" "hådjånit" "bårjjånit" "håhkkånit" "smållånit" "gåbmånit" "sårmmånit" "dårrånit" "båhtånit" "báhtarit" "stávttjurit" "njimmurit" "ginntsurit" "tsaggasit" "tjavggasit" "tsakkasit" "tjiesskasit" "nuollasit" "njámmasit" "tjadnasit" "rahpasit" "dahppasit" "guorrasit" "sárrasit" "njadtsasit" "máhttsasit" "harttsasit" "rahtasit" "basstasit" "konkurssit" "buodusit" "hádjusit" "mådjusit" "målssusit" "ávvusit" "tjoavddásit" "tjuolldásit" "juohkásit" "njuohkásit" "gásskásit" "tjállásit" "jávvásit" "tjávvásit" "bådnjåsit" "båhtjåsit" "råhtåsit" "rábastit" "duodastit" "sárgastit" "ságastit" "berjastit" "vilsjastit" "ruossjastit" "gehtjastit" "tjuottjastit" "njahkastit" "svahkastit" "sihkastit" "tsakkastit" "biekkastit" "dálkastit" "njaskastit" "illastit" "lávlastit" "tjuojmastit" "duolmastit" "suomastit" "tjuormastit" "åmastit" "jienastit" "májnastit" "tjerastit" "subtsastit" "gartsastit" "hartsastit" "gattsastit" "njattsastit" "ruohtastit" "suovastit" "skielbestit" "rubestit" "srubestit" "strubestit" "oadestit" "soadestit" "bidestit" "tjidestit" "suojgestit" "doargestit" "gurgestit" "gárgestit" "bårgestit" "jårgestit" "jugestit" "sluvgestit" "bávtjestit" "rájkestit" "bálkestit" "dárkestit" "duvkestit" "alestit" "gielestit" "málestit" "njamestit" "ármestit" "lånestit" "oahpestit" "doarestit" "oasestit" "tsåjtsestit" "luojtestit" "vattestit" "rejddistit" "boagostit" "boakkostit" "gaskostit" "bælostit" "tjalmostit" "njálmostit" "guovdustit" "berustit" "merustit" "ájrustit" "dárustit" "vástustit" "ladástit" "jugástit" "ijástit" "salástit" "gulástit" "sulástit" "sámástit" "ganástit" "nuppástit" "birástit" "gæsástit" "dåbdåstit" "låjdåstit" "åvdåstit" "ådåstit" "bådåstit" "jårgåstit" "bårjåstit" "måhkåstit" "råkkåstit" "bålåstit" "båråstit" "måråstit" "målsåstit" "måttsåstit" "båsåstit" "båltåstit" "gåvåstit" ;

N ->    "N:n" 1: %n ?(1.cmp = "") { %1[lemcase=$lemcase] }  
	| "N:n.loc" 3: %n.*.loc { %1[case=(if (1.function = "@←ADVL-ela" or 1.function = "@ADVL-ela→") ela else ine)] } 
	| "N:n.cmp n" 3: n.*.cmp  %n { 1[lemcase=$lemcase] + %2 } 
	| "N:n.cmp n.cmp n" 3: n.*.cmp n.*.cmp  %n { 1[lemcase=$lemcase] + 2 + %3 }  !!! ráđđeaddinbálvalus
	| "N:n.cmp vblex" 3: n.*.cmp  %vblex { 1[lemcase=$lemcase] + %2 } !!! koronačavgen
	| "N:np.cmp n" 3: np.*.cmp  %n { 1[lemcase=$lemcase,hyph=cmp_hyph] + %2 } !!! Nobelkomitea
	| "N:adj.cmp N" 3: adj.*.cmp  %n { 1[lemcase=$lemcase] + %2 } 
	| "N:vblex.cmp n" 2:   vblex.*.cmp %n { 1[lemcase=$lemcase] + %2 } 
	| "N:vblex.cmp vblex" 2:   vblex.*.cmp %vblex { 1[lemcase=$lemcase] + %2 } 
	| "N:vblex.v2n "       2: %vblex.*.[v2n].*.$function ?(1.onlycmp = "") { %1[lemcase=$lemcase,v2n=(if (1.v2n=der_muš) 
	der_mus else 1.v2n)]} !
	| "n.splitr" 3: %n.*."cmp_splitr"  { %1[lemcase=$lemcase] } ! A-
	;

Name ->  "N:np" %np.*.[case].$function ?(1.cmp= "") { %1[case=(if (1.case=loc and 1.function = "@←ADVL-ela" or 1.function = "@ADVL-ela→") 
	ela elif (1.case=loc) ine elif (1.function = "@-FSUBJ→") nom else 1.case)] } 
	| "N:np.cmp np" 3: np.*.cmp  %np { 1[lemcase=$lemcase,hyph=cmp_hyph] + %2 } !!! Ann-Marie
	| "NP:np.attr np" np.*."@→N" %Name { 1 _ %2 } 
	| "NP:np.attr np.attr np" np.*."@→N" np.*."@→N" %Name { 1 _ 2 _ %3 } 
	| "NP:np.attr np.attr np.attr np" np.*."@→N" np.*."@→N" np.*."@→N" %Name { 1 _ 2 _ 3 _ %4 } 
	| "NP:np.attr np.attr np.attr np.attr np" np.*."@→N" np.*."@→N" np.*."@→N" np.*."@→N" %Name { 1 _ 2 _ 3 _ 4 _ %5 } 
	| "NP:np.attr np.attr np.attr np.attr np" np.*."@→N" np.*."@→N" np.*."@→N" np.*."@→N" np.*."@→N" %Name { 1 _ 2 _ 3 _ 4 _ 5 _ %6 } 
	| "NP:np cnp np" Name cnjcoo."@CNP" %Name.*.$function [$number=(if (1.np_type=ant and 3.np_type=ant) du else 3.number)] 
	{ 1[lemcase=$lemcase] _ 2 _ %3[number=3.number] }
	;


NP ->  %N  { %1[lemcase=$lemcase] } 
	| %N PCLE { %1 _ 2 }
	| "NP:N cnjcoo N" 1: N cnjcoo."@CNP" %N { 1[lemcase=$lemcase] _ 2 _ %3 } !!! coordination
	| "NP:NP cnjcoo NP" 1: NP cnjcoo."@CNP" %NP { 1[lemcase=$lemcase] _ 2 _ %3 } !!! coordination
	| "NP:N cnjcoo N" 1: N.*."@→N" cnjcoo."@CNP" %N  { 1[lemcase=$lemcase] _ 2 _ %3 } !!! coordination
	| "NP:N N" 2: N.*."@→N" %N { 1 _ 2} !sámi máná
	| "NP:AP N" AP  %N { 1 _ %2[poss=$poss] }
	| "NP:buorre N" buorre@adj  %N { 1 _ %2[poss=$poss] }

	| "NP:attrprn N.loc" 4: [attrprn]@prn %N.*.loc { 1[foc=(if (1.lem in prnnotfocsmj) "" else 1.foc)] _  
	%2[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)]} 
	| "NP:prn N.loc" 4: prn %N.*.loc { 1[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)] 
	_  %2[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)]} 
	| "NP:prn N" 3: prn.*."@→N" %N { 1 _ %2} 
	| "NP:prn AP N" 3: prn.*."@→N" adj.*."@→N" %N { 1 _ 2 _ %3} 
	| "NP:gohcuid alde > V" 4: %gohcu@n.*.pl.gen { %1(vblex_infin) } !denne må generaliseres, hvordan uttrykke pos?

	| "NP:Name" %Name { %1 }
	| "NP:N Name" N.*."@→N" %Name {1 _ %2 } !gonagas Harald

	| "NP:num.sem_year.loc" 3: %num.sem_year.sg.loc  {  jahke@n.sg.ine _ %1[case=nom] }
	| "NP:num.sem_year.ill" 3: %num.sem_year.sg.ill  {  jahke@n.sg.ill _ %1[case=nom] }
	| "NP:num" 1: %num  { %1 }
	| "NP:num pcle" 1: %N pcle (if (2.lem/tl="") { %1 } else  { %1 _ 2})
	| "NP:num.loc N.loc" 2: %num.*.loc N.*.loc { 1[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela 
	else ine)] _ %2[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)] } 
	| "NP:num N" 2: %num N {1[case=(if (1.lem = akta) 1.case elif (1.case = acc) nom else 1.case)]  _ 2[case=(if (2.case = loc) (if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine) elif (1.lem = akta) 2.case elif (1.case = acc and 2.case = acc) gen else 2.case)]}  !!!2009-2013 áigodagas
	| "NP:prn.dem num.loc N.loc" 2: prn.dem %num.*.loc n.*.loc { 1 _ 2[case=(if (3.function = "@←ADVL-ela" or 
	3.function = "@ADVL-ela→") ela else ine)] _ %3[case=(if (3.function = "@←ADVL-ela" or 3.function = "@ADVL-ela→") 
	ela else ine)] }
	| "NP:prn.dem num N" 2: prn.dem %num N {1 _ 2[case=(if (2.lem = akta) 2.case elif (2.case = acc and 3.case = acc) nom 
	else 2.case)]  _ 3[case=(if (2.lem = akta) 3.case elif (2.case = acc and 3.case = acc) gen else 3.case)]}  !3.lem not = akta (1.case not = 2.case)
	| "NP:prn.ref N" 2: prn.ref %N { 1 _ 2}  !ietjam viellja !! denne treffer nå også feildisambiguering, mer robust
	| "NP:attrprn N" 2: [attrprn]@prn %N  { 1[number="",case="",attr=attr] _ 2}  !iešguđetge doaimmaid, mer robust, i tilfelle feil syntagg   
	| "NP:prn N" 2: prn.*."@→N" %N  { 1[number=(if (1. lem in attrprn) "" else 1.number),case= (if (1. lem in attrprn) ""  elif (1.case = loc) (if (1.function = "@←ADVL-ela" or 1.function = "@ADVL-ela→") ela else ine) else 1.case)] _ 2}  !dav vielja, juohke sajis !!!    
	;


PRN -> "prnnotfocsme" 1: %[prnnotfocsme]@prn  { %1[foc=""] }
	| "prn.loc" 3:  %prn.*.loc ?(1.prn_type not = res)  { %1[case=(if (1.function = "@←ADVL-ela" or 1.function = "@ADVL-ela→") ela 
	else ine)] } 
	| "prn not res" 1:  %prn ?(1.prn_type not = res)  { %1[lemcase=$lemcase,foc=(if (1.lem in prnnotfocsmj) "" else 1.foc)] }
	| "prn.res not nubbe" 2:  %prn.res ?(1.lem not = nubbe)  { %1(prn_res) }
	| "prn.res nubbe nuppe" 2:  prn.res %prn.res  { 1[lemcase=$lemcase] _ %2 }
	| "ii prn N" 1:  ii@vblex.iv.neg %prn.*."foc_neg-ge" N  {1[lemcase=$lemcase,tense=pres] _ %2[foc=(if (2.lem in prnnotfocsmj) 
	"" else 2.foc)] _ 3 } 	!!!ige makkárge eará ealli > ij makkirak ietjá judos
	| "prn.nom prn.nom" 1:  %prn.*.nom prn.*.nom  { %1[lemcase=$lemcase] _ 2[foc=(if (2.lem in prnnotfocsmj) "" else 2.foc)] } !soai goappašaga
	| "okta ge" 1: %okta@num ge@pcle { %1[pos_tag=prn,prn_type_other=ind,foc=foc_neg-k]}
	| "prn PCLE" 1: %prn PCLE { %1 _ 2 }
	| "prn n.@Pron←" 1: %prn n.*."@Pron←" { %1 _ 2 } !mii ávkkiid
	;

AP -> "AP:adj" 1: %adj { %1 }
     | "AP:adv adj" 1: adv."@→A"  %adj { 1 _ %2}
     |  1: AdvP prn.*."@←SUBJ" %adj.*."@←SPRED" { 1 _ 2 _ %3} !dieđusge dat dehálaš
!    | 1: "num.cmp adj" 3: num.cmp  %adj { 1 + %2 } !Could not find output pattern
!    | 1: vblex.*.prsprc { %1 }
    | "AP:AP cnjcoo AP" 1: AP cnjcoo %AP { %1 _ 2 _ %3} 
    | "AP:num jagi boaris"  2: %num jahki@n boaris@adj { 1[case=gen] _ 3[lem=jagák] } 
	| "AP:numcmp jahkásaš" 2: %num.cmp_hyph.cmp jahkásaš@adj { 1[number=sg,case=gen,cmp="",onlycmp="",hyph="",num_type=arab] 
	_ 2[lem=jagák] } 
	| "AP:num jahkásaš" 2: num.sg.gen %jahkásaš@adj { 1 _ %2[lem=jagák] } 
	| "AP:num jahkásaččat.adv" 2: num.sg.gen %jahkásaččat@adv { 1 _ %2[lem=jagák,pos_tag=adj,number=pl,case=nom] } ! feil disambiguering
	;

AdvP -> "AdvP:adv" %adv.*.$function (if (1.lem/tl="") { } else { %1[number=(if (1.number/tl=sg) sg else "")] })
	| "AdvP:adv cnjcoo adv " %adv cnjcoo adv { %1 _ 2 _ 3 }
	| "AdvP:adv adv " adv."@→ADVL" %adv { 1 _ %2 }
	| "AdvP:pcle adv" pcle %adv (if (1.lem/tl="") { %2 } else { 1 _ %2 })
	| "AdvP:adv pcle" %adv pcle (if (2.lem/tl="") { %1 } else { %1 _ 2 })
	| 2: %adj.der_aadv { %1 }
!	| %PP { %1 }
	;

PP -> "NP post" 1: NP %post (if (2.pos_tag/tr=n) { 1 _ %2(n_only)} else { 1[case=(if (2.lem = miehtáj) acc else 1.case)] _ 2 }) 
	| "prn post" 1: prn %post (if (2.pos_tag/tr=n) { 1 _ %2(n_only)} else { 1[case=(if (2.lem = miehtáj) acc else 1.case)] _ 2 }) 
	| "dás post" 1: dás@adv %post  { 1 _ %2 }
	| "pre/post NP" 2: %pr NP ?(1.adpos/tl = post) { 2[lemcase=1.lemcase,case=(if (1.lem = miehtáj) acc else 2.case)] _ 1[lemcase=2.lemcase] }  !miehtá beavddi > bievde miehtáj
	| "pre/post prn" 2: %pr prn ?(1.adpos/tl = post) { 2[lemcase=1.lemcase,case=(if (1.lem = miehtáj) acc else 2.case)] _ 1[lemcase=2.lemcase] }  !miehtá beavddi > bievde miehtáj
	| "pre NP" 1: %pr NP { 1 _ 2 } !maŋŋá bargoáiggi > maŋŋela barggoájge px1sg
	| "pre prn" 1: %pr prn { 1 _ 2 } !maŋŋá bargoáiggi > maŋŋela barggoájge px1sg
	; !

NegVP -> "ii dadjat@conneg ieš N.acc" 5: ii@vblex.iv.neg [dadjat_verbs]@vblex.*.conneg %ieš@prn.ref N.*.acc 
	{ 1[lemcase=$lemcase,tense=2.tense] _ 2 _ %3[pos_tag=prn,prn_type=pers,person=3.poss,number=3.poss,lem=(if 
	(3.poss=px1sg or 3.poss=px1du or 3.poss=px1pl) mån elif (3.poss=px2sg or 3.poss=px2du or 3.poss=px2pl) dån else sån)] 
	_ liehket@vblex.indic.pres.p3.[4.number] _ 4[case=nom]} !!! Ii jáhkkán alddis dávdda. > Ittjij jáhke sujna la dávdda.
	| "ii lohkat@conneg adj.ess" 3: ii@vblex.iv.neg %[lohkat_verbs]@vblex.*.conneg adj.ess 
	{ %2[conneg="",tense=2.tense,person=1.person,number=1.number] _ 1 _ liehket@vblex.iv.indic.pres.conneg _ 
	3[number=sg,case=nom]} !!! ii loga váttisin > javllá ij la gássjel
	|"ii lohkat@conneg ieš inf" 3: ii@vblex.iv.neg %[lohkat_verbs]@vblex.*.conneg ieš@prn.ref vblex.*.inf 
	{ %2[conneg="",tense=2.tense,person=1.person,number=1.number] _ 2(prn_pers)[person=3.poss,number=3.poss,case=nom,lem=(if 
	(3.poss=px1sg or 3.poss=px1du or 3.poss=px1pl) mån elif (3.poss=px2sg or 3.poss=px2du or 3.poss=px2pl) dån else sån)] 
	_ 1[person=3.poss,number=3.poss] _ 4[infin="",mood=indic,person=1.person,number=1.number,conneg=conneg]} !!! ii loga iežas healkkehit > javllá sån ij hielkeda.
	| "ii lohkat@conneg ess.@←OPRED vblex.inf" 3: ii@vblex.iv.neg %[lohkat_verbs]@vblex.*.conneg adj.*."@←OPRED" vblex.*.inf 
	{ %2[lemcase=$lemcase,conneg="",tense=2.tense,person=1.person,number=1.number] _ 1 _ liehket@vblex.iv.indic.pres.conneg _ 
	3[number=sg,case=nom] _ 4[infin=inf]} 
	| "ii conneg vblex" 3: ii@vblex.iv.neg %vblex.*.conneg vblex { 1[lemcase=$lemcase,tense=2.tense] _ %2[mood=indic] _ 3} 
	| "ii NP conneg" 3: ii@vblex.iv.neg NP %vblex.*.conneg { 1[lemcase=$lemcase,tense=3.tense] _ 2 _ %3[mood=indic,tense=""] } 
	| "ii PRN conneg" 3: ii@vblex.iv.neg PRN %vblex.*.conneg (if (2.prn_type = pers and 2.case=nom) { 1[lemcase=$lemcase,tense=3.tense] 
	_ %3[mood=indic,tense=(if (3.lem = liehket) 3.tense else "")] } else { 1[lemcase=$lemcase,tense=3.tense] _ 2 _ %3[mood=indic,tense=(if 
	(3.lem = liehket) 3.tense else "")] }) !!! ii son sáhte > ij máhte
	| "ii conneg NP" 3: ii@vblex.iv.neg %vblex.*.conneg NP ?(2.lem not = liehket){ 1[lemcase=$lemcase,tense=2.tense] _ %2[mood=indic] _ 3 } 
	| "ii conneg prn" 3: ii@vblex.iv.neg %vblex.*.conneg prn ?(3.prn_type not = ref) { 1[lemcase=$lemcase,tense=2.tense] _ 3[foc=(if 
	(3.lem in prnnotfocsmj) "" else 3.foc)] _ %2[mood=indic] } 
	| "ii NP conneg vblex" 3: ii@vblex.iv.neg NP %vblex.*.conneg vblex { 1[lemcase=$lemcase,tense=3.tense] _ %3[mood=indic] _ 2 _ 4 } 
	| "ii conneg NP vblex" 6: ii@vblex.iv.neg %vblex.*.conneg NP vblex ?(4.infin not = "") { 1[lemcase=$lemcase,tense=2.tense] _ 
	%2[mood=2.mood,conneg=2.conneg] _ 3[case=(if (3.case=acc and 2.lem in dadjat_verbs) nom else 3.case)] _ 4[infin=(if 
	(3.case=acc and 2.lem in dadjat_verbs) "" else 4.infin),mood=(if (3.case=acc and 2.lem in dadjat_verbs) indic else ""),
	tense=(if (3.case=acc and 2.lem in dadjat_verbs) pres else ""),person=(if (3.case=acc and 2.lem in dadjat_verbs) p3 else ""),
	number=(if (3.case=acc and 2.lem in dadjat_verbs) 3.number else "")] } !!! in jáhke nieidda boahtit > iv jáhke næjttso boahtá
	| "ii conneg prn vblex" 6: ii@vblex.iv.neg %vblex.*.conneg prn vblex { 1[lemcase=$lemcase,tense=2.tense] _ %2[mood=2.mood,conneg=2.conneg] 
	_ 3[case=(if (3.case=acc and 2.lem in dadjat_verbs) nom else 3.case)] _ 4[infin=(if (3.case=acc and 2.lem in dadjat_verbs) "" 
	else 4.infin),mood=(if (3.case=acc and 2.lem in dadjat_verbs) indic else ""),tense=(if (3.case=acc and 2.lem in dadjat_verbs) pres 
	else ""),person=(if (3.case=acc and 2.lem in dadjat_verbs) p3 else ""),number=(if (3.case=acc and 2.lem in dadjat_verbs) 3.number 
	else "")] } !!! ii jáhke su/dan boahtit > iv jáhke sån/dat boahtá
	| "ii dadjat@conneg prn NP.ess" 6: %ii@vblex.iv.neg [dadjat_verbs]@vblex.*.conneg prn.*.acc NP.*.ess { 1[lemcase=$lemcase,tense=2.tense] 
	_ 2 _ 3[case=nom] _ %liehket(vblex_fin)[neg="",mood=indic,tense=2.tense,person=(if (3.prn_type=dem) p3 else 3.person),number=3.number] 
	_ 4[number=3.number,case=nom] } !!! ii jáhke su nieidan
	| "ii dadjat@conneg prn adj" 6: ii@vblex.iv.neg %[dadjat_verbs]@vblex.*.conneg prn.*.acc adj { 1[lemcase=$lemcase,tense=2.tense] _ %2 
	_ 3[case=nom] _ liehket@vblex.iv.indic.[2.tense][person=3.person,number=3.number] _ 4[number=3.number,case=nom] } 
	!!! ii jáhke su dohkalažžan
	| "ii AdvP conneg" 3: ii@vblex.iv.neg AdvP %vblex.*.conneg { 1[lemcase=$lemcase,tense=3.tense] _ 2 _ %3[mood=indic,tense=(if 
	(3.lem incl liehket) pres else "")] } 
	| "ii pcle conneg" 3: ii@vblex.iv.neg pcle %vblex.*.conneg (if (2.lem = ga) { 1[lemcase=$lemcase,tense=3.tense] _ %3[mood=indic,tense=(if 
	(3.lem incl liehket) pres else "")] } else { 1[lemcase=$lemcase,tense=3.tense] _ 2 _ %3[tense=(if (3.lem incl liehket) pres else "")] }) 
	| "ii conneg" 3: %ii@vblex.iv.neg vblex.*.conneg ?(2.lem not in dadjat_verbs) { %1[lemcase=$lemcase,tense=(if (1. lem incl ij and 2.lem incl liehket) pres else 1.tense)] _ 2 } ! sáhtán borrat
	;

V -> "aux condvblex" 5: %[auxverbs]@vblex.*.cond ?(1.qst="") { %1[lemcase=$lemcase] }
	| "aux condvblex.q" 4: %[auxverbs]@vblex.*.cond ?(1.qst=qst) { %1[qst="",lemcase=$lemcase] _ gus@pcle.qst }
	| "condvblex.q" 3: %vblex.*.cond ?(1.qst=qst) { liehket@vblex.iv.cond.[1.person_number][lemcase=1.lemcase] _ gus@pcle.qst _ %1[mood="",infin=inf] }
	| "condvblex" 2: %vblex.*.cond { liehket@vblex.iv.cond.[1.person_number][lemcase=$lemcase] _ %1[mood="",tense="",infin=inf] } ! boađášin > luluv boahtet
	| "vblex.v2v" 2: %vblex.*.[v2v].*.$function ?(1.onlycmp = "") { %1[lemcase=$lemcase,v2v=(if (1.v2v=der_inchl and 1.lem incl verb3st) der_ahtja elif (1.v2v=der_halla) der_dalla elif (1.v2v=der_h) der_d elif (1.v2v=der_ahtti) der_caus elif (1.v2v=der_passs) der_passl else 1.v2v)]} !
	| "vblex" 1: %vblex.*.$function ?(1.onlycmp = "") { %1[lemcase=$lemcase]} !
	| "vblex.inf" 2: %vblex.*.inf.$function { %1[lemcase=$lemcase,infin=(if (1.lem incl not-usually-supn-verbs) 1.infin else (if (1.function = "@←ADVL") supn else 1.infin))]} !
	| "dadjat ahte" 1: %[dadjat_verbs]@vblex.*."@+FMAINV" ahte@cnjsub { %1[lemcase=$lemcase]} !
	| "vblex placetimeadv" 1: %vblex.*.$function [placetimeadv]@adv.*."@←ADVL-ine" { %2[lemcase=1.lemcase] _ 1[lemcase=2.lemcase]} !!! soai stoahkaba álo ovttas > soai álo stoahkaba ovttas 
	| "@+FMAINV inf" 2: %vblex.*.$person.$number."@+FMAINV" vblex.*.inf { %1[lemcase=$lemcase] _ 2[infin=(if (2.lem incl not-usually-supn-verbs) 2.infin else (if (1.lem incl sme-rek-verbs) 2.infin else (if (2.function = "@←ADVL") supn else 2.infin)))]} !
	| "livččii vblex" 3: leat@vblex.*.cond %vblex { 1[lemcase=$lemcase] _ %2} 
	| "FAUXV FMAINV" 2: %vblex.*.$person.$number."@+FAUXV" vblex.*."@-FMAINV" { %1[lemcase=$lemcase,tense=(if (1. lem incl ij and 2.lem incl liehket) pres else 1.tense)] _ 2 } ! sáhtán borrat
	;

VP -> "pers NegVP" 2: prn.pers.*.nom %NegVP { %2[lemcase=1.lemcase] } 
	| "pers NegVP AdvP" 2: prn.pers.*.nom %NegVP AdvP { %2[lemcase=1.lemcase] _ 3 } 
	| "pers NegVP AP" 2: prn.pers.*.nom %NegVP AP { %2[lemcase=1.lemcase] _ 3 }
	| "pers NegVP NP" 2: prn.pers.*.nom %NegVP NP (if (2.lem incl lohkat_verbs and 1.person=p3) { 1[lemcase=$lemcase] _ %2 _ 3 } else 
	{ %2[lemcase=1.lemcase] _ 3 })
	| "pers NegVP vblex" 3: prn.pers.*.nom %NegVP vblex { %2[lemcase=1.lemcase] _ 3 } 

	| "NegVP vblex NP" 2: NegVP %vblex NP { 1[lemcase=$lemcase] _ 3 _ %2} 

	| "FAUXV vblex NP.acc" 2: vblex.trans.mood.$person.$number."@+FAUXV" %vblex.*."@-FMAINV" NP.*.acc { 1[lemcase=$lemcase] _ 3 _ %2 } ! 
	| "FAUXV pcle FMAINV NP" 2: vblex.trans.mood.$person.$number."@+FAUXV" pcle %V.*."@-FMAINV" NP { 1[lemcase=$lemcase] _ 2 _ 4 _ %3 }! 
	| "@-FMAINV NP vblex" 2: vblex.*."@-FMAINV" NP %vblex { 1[lemcase=$lemcase] _ 2 _ %3[infin=(if (1.lem incl smj-supn-triggerverbs and 3.infin=inf) supn else 3.infin)] }

	| "vblex AdvP vblex" 1: vblex AdvP %vblex (if (1.function="@+FMAINV" and 2.lem incl placetimeadv) { 2[lemcase=1.lemcase] 
	_ 1[lemcase=2.lemcase] _ %3 } else { 1[lemcase=$lemcase] _ 2 _ %3 })! 
	| "vblex AdvP vblex" 1: %V.*."@+FMAINV" prn AdvP { %1[lemcase=$lemcase] _ 2 _ 3 } ! Oaččun dan hálbbit
	| "vblex AdvP vblex NP" 1: vblex AdvP %vblex NP (if (1.function="@+FMAINV" and 2.lem incl placetimeadv) { 2[lemcase=1.lemcase] 
	_ 1[lemcase=2.lemcase] _ 4 _ %3 } else { 1[lemcase=$lemcase] _ 2 _ 4 _ %3 })
	!!! Son geahččala ain ohcat Jaakko. > Sån ájn gæhttjal Jaakkov åhtsåt.
	| "vblex PCLE vblex" 1: vblex PCLE %vblex { 1[lemcase=$lemcase] _ 2 _ %3 }! 
	| "vblex PCLE vblex NP" 1: vblex PCLE %vblex NP (if (3.lem = liehket) { 1[lemcase=$lemcase] _ 2 _ %3 _ 4 } else { 1[lemcase=$lemcase] _ 2 _ 4 _ %3 })! 
	| "@+FMAINV NP vblex" 2: V.*."@+FMAINV" NP %vblex ?(3.onlycmp = "") (if (2.function="@-FSUBJ→" and 3.infin="actio.ess") 
	{1[lemcase=$lemcase] _ 2[case=nom,number=(if (2.pos_tag = N and 2.number = du) sg else 2.number)] _ 
	liehket(vblex_fin)[mood=indic,tense=1.tense,person=p3,number=2.number] _ %3} else { 1[lemcase=$lemcase] _ 2 _ %3[infin=(if 
	(3.lem incl not-usually-supn-verbs) 3.infin elif (3.infin=inf) (if (1.lem incl smj-supn-triggerverbs or 3. function="@←ADVL") supn 
	else 3.infin) else 3.infin) ] }) !!! oainnán nieidda stoahkamin > oainnán nieida lea stoahkamin 

	| "dadjat pers.acc adj" 4: %[dadjat_verbs]@vblex prn.pers.*.acc adj { 1[lemcase=$lemcase] _ 2[case=nom] _ 
	%liehket(vblex)[mood=indic,tense=1.tense,person=2.person,number=2.number] _ 3[number=2.number,case=nom] } 
	!!!Son lohká sin duđavaččat > Sån javllá sij li dudálattja
	| "dadjat pers.acc vblex.inf" 4: [dadjat_verbs]@vblex prn.pers.*.acc %vblex.*.inf { 1[lemcase=$lemcase] _ 2[case=nom] 
	_ %3[infin="",mood=indic,tense=1.tense,person=2.person,number=2.number] } !!!jáhkká su váikkuhit > jáhkká sån vájkkut
	| "dadjat prn.dem.acc vblex.inf" 4: [dadjat_verbs]@vblex prn.dem.*.acc %vblex.*.inf { 1[lemcase=$lemcase] _ 2[case=nom] 
	_ %3[infin="",mood=indic,tense=1.tense,person=p3,number=2.number] } !!!jáhkká dan váikkuhit > jáhkká dat vájkkut
	| "dadjat prn.acc prfprc" 4: %[dadjat_verbs]@vblex prn.*.acc vblex.*.prfprc { 1[lemcase=$lemcase] _ 2[case=nom] _ 
	%liehket(vblex)[mood=indic,tense=pres,person=(if (2.prn_type=dem) p3 else 2.person),number=2.number] _ 3 } 
	!!!lohká sin árvvoštallan > javllá sij li árvustallam 
	| "dadjat n.acc inf" 4: [dadjat_verbs]@vblex n.*.acc %vblex.*.inf { 1[lemcase=$lemcase] _ 2[case=nom] _ 
	%3[infin="",mood=indic,tense=1.tense,person=p3,number=2.number] } !!!jáhkká skuvlla váikkuhit > jáhkká skåvllå vájkkut
	| "dadjat ieš.ref adj.ess" 5: %[dadjat_verbs]@vblex ieš@prn.ref adj.*.ess { 1[lemcase=$lemcase] _ 
	%2[pos_tag=prn,prn_type=pers,person=2.poss,number=2.poss,case=nom,lem=(if (2.poss=px1sg or 2.poss=px1du or 2.poss=px1pl) mån elif 
	(2.poss=px2sg or 2.poss=px2du or 2.poss=px2pl) dån else sån)] _ liehket(vblex)[mood=indic,tense=pres,person=2.poss,number=2.poss] _ 
	3[number=2.poss,case=nom]} !!! Son lohká iežaset duđavažžan. > Sån javllá sij li dudálattja.
	| "leat AP" 1: %leat@vblex AP {%1[lemcase=$lemcase] _ 2}
	| "ill2ine_verbs NPill" 2: %[ill2ine_verbs]@vblex NP.*.ill {1[lemcase=$lemcase] _ %2[case=ine] } ! Mun báhcen gávpogii > stadan
	| "acc2ill_verbs NP.acc ill" 2: %[acc2ill_verbs]@vblex NP.*.acc {1[lemcase=$lemcase] _ %2[case=ill] } ! 
	| "vblex NP AdvP" 1: %vblex NP AdvP { %1[lemcase=$lemcase] _ 2 _ 3 }! 
	| "vblex NP AP C" 1: %vblex NP AP C { %1[lemcase=$lemcase] _ 2 _ 3 _ 4 }! 
	| "vblex PRN AP C" 1: %vblex PRN AP C { %1[lemcase=$lemcase] _ 2 _ 3 _ 4 }! 
	| "vblex cnjcoo vblex" 1: vblex cnjcoo %vblex { 1[lemcase=$lemcase] _ 2 _ 3 } 
	| "inf cnjcoo inf" 2: vblex.*.inf cnjcoo %vblex.*.inf { 1[lemcase=$lemcase, infin=(if (1.function = "@←ADVL") supn else 1.infin)] _ 2 _ 3[infin=(if (3.function = "@←ADVL") supn else 3.infin)] } 
	| "adj_nottriggingsupn,edd vblex,inf" 3: [adj_nottriggingsupn]@adj.ess %vblex.*.inf { 1[lemcase=$lemcase] _ %2 }
	| "VP pcle" %VP pcle { 1[lemcase=$lemcase] _ 2 }
	| "VP pcle AdvP" %VP pcle AdvP { 1[lemcase=$lemcase] _ 2 _ 3 }
	| "VP PP" 1: %VP PP { %1[lemcase=$lemcase] _ 2 } 
	| "VP PP pcle " 1: %VP PP pcle { %1[lemcase=$lemcase] _ 2 _ 3 }
	| "VP NP AdvP" 1: %VP NP AdvP { %1[lemcase=$lemcase] _ 2 _ 3 }
	| "VP NP pcle" 1: %VP NP pcle { %1[lemcase=$lemcase] _ 2 _ 3 }
	| "VP NP PP " 3: %VP NP PP { %1[lemcase=$lemcase] _ 2 _ 3}
	| "NegVP PP" 2: %NegVP PP { %1[lemcase=$lemcase] _ 2 }
	| "NegVP AdvP" 2: %NegVP AdvP { %1[lemcase=$lemcase] _ 2 }
	| "NegVP PP AdvP" 2: %NegVP PP AdvP { %1[lemcase=$lemcase] _ 2 _ 3 }
	| "VP PP AdvP" 1: %VP PP AdvP { %1[lemcase=$lemcase] _ 2 _ 3 }
	| "NegVP PP pcle" 2: %NegVP PP pcle { %1[lemcase=$lemcase] _ 2 _ 3 }
	| "NegVP NP" 2: %NegVP NP { %1[lemcase=$lemcase] _ 2 }
	| "NegVP NP AdvP" 2: %NegVP NP AdvP { %1[lemcase=$lemcase] _ 2 _ 3 }
	| "FAUXV FMAINV NP" 3: %vblex.*.$person.$number."@+FAUXV" vblex.*."@-FMAINV" NP (if (2.lem incl copulas) { %1[lemcase=$lemcase] _ 2[v2v=(if (2.v2v=der_inchl and 2.lem incl verb3st) der_ahtja elif (2.v2v=der_halla) der_dalla elif (2.v2v=der_h) der_d elif (2.v2v=der_ahtti) der_caus elif (2.v2v=der_passs) der_passl else 2.v2v)] _ 3 } else { %1[lemcase=$lemcase] _ 3 _ 2 }) ! sáhtán láibbi borrat
	| "FAUXV NP FMAINV NP" 3: %vblex.*.$person.$number."@+FAUXV" NP vblex.*."@-FMAINV" NP ?(4.function not = "@→N") { %1[lemcase=$lemcase] _ 2 _ 4 _ 3[v2v=(if (3.v2v=der_inchl and 3.lem incl verb3st) der_ahtja elif (3.v2v=der_halla) der_dalla elif (3.v2v=der_h) der_d elif (3.v2v=der_ahtti) der_caus elif (3.v2v=der_passs) der_passl else 3.v2v)] } 
	| "FAUXV PRN FMAINV NP" 3: %vblex.*.$person.$number."@+FAUXV" PRN vblex.*."@-FMAINV" NP { %1[lemcase=$lemcase] _ 2 _ 4 _ 3[v2v=(if (3.v2v=der_inchl and 3.lem incl verb3st) der_ahtja elif (3.v2v=der_halla) der_dalla elif (3.v2v=der_h) der_d elif (3.v2v=der_ahtti) der_caus elif (3.v2v=der_passs) der_passl else 3.v2v)] } 
	| "FAUXV AdvP FMAINV NP" 3: %vblex.*.$person.$number."@+FAUXV" AdvP vblex.*."@-FMAINV" NP { %1[lemcase=$lemcase] _ 2 _ 4 _ 3[v2v=(if (3.v2v=der_inchl and 3.lem incl verb3st) der_ahtja elif (3.v2v=der_halla) der_dalla elif (3.v2v=der_h) der_d elif (3.v2v=der_ahtti) der_caus elif (3.v2v=der_passs) der_passl else 3.v2v)] } !!! Hæhttu dågålattjat máná kultuvrraduogátjav vieledit. 
	| "FAUXV FMAINV PRN" 2: %vblex.*.$person.$number."@+FAUXV" vblex.*."@-FMAINV" PRN ?(1.lem not = ii and 3.attr = "") { %1[lemcase=$lemcase] _ 3[v2v=(if (2.v2v=der_inchl and 2.lem incl verb3st) der_ahtja elif (2.v2v=der_halla) der_dalla elif (2.v2v=der_h) der_d elif (2.v2v=der_ahtti) der_caus elif (2.v2v=der_passs) der_passl else 2.v2v)] _ 2 } ! sáhtán láibbi borrat
	| "FAUXV NP FMAINV" 2: %vblex.*.$person.$number."@+FAUXV" NP vblex.*."@-FMAINV" { %1[lemcase=$lemcase] _ 2 _ 3[v2v=(if (3.v2v=der_inchl and 3.lem incl verb3st) der_ahtja elif (3.v2v=der_halla) der_dalla elif (3.v2v=der_h) der_d elif (3.v2v=der_ahtti) der_caus elif (3.v2v=der_passs) der_passl else 3.v2v)] } ! sáhtán láibbi borrat
	| "FAUXV @SPRED→ FMAINV" 2: %vblex.*.$person.$number."@+FAUXV" adj.*."@SPRED→" vblex.*."@-FMAINV" { %1[lemcase=$lemcase] _ 3 _ 2 } !!! lea váttis leamaš > la læhkám gássjel
	| "vblexN← N@-F←OBJ" 3: %vblex.*."@N←" N.*."@-F←OBJ" { %2[number=2.number] _ 1 } !!! álggahit idjadansajiid > idjadimsajijt álgadit
	| "vblex@N← adv@→N n@-F←OBJ" 3: %vblex.*."@N←" adv."@→N" N.*."@-F←OBJ" { 2 _ %3[number=3.number] _ 1 } !!! juhkat veaháš čázi > veaháš čázi juhkat
	| "vblex NP vblex@N← prn@-F←OBJ" 3: vblex NP %vblex.*."@N←" prn.*."@-F←OBJ" { 1[lemcase=$lemcase] _ 2 _ %4[number=4.number] _ 3 } 
	| "pers V NP" 3: PRN %V.*.$function.$sentinit NP (if (1.function="@-FSUBJ→" and 2.infin="actio.ess") {1[lemcase=$lemcase,case=nom] 
	_ liehket(vblex_liehket_fin)[mood=indic,tense=pres,person=p3,number=1.number] _ %2 _ 3} else (if 
	(1.person_number in first_sec_person_number and  1.person_number= 2.person_number) { %2[lemcase=1.lemcase,sentinit=1.sentinit] _ 3 } 
	elif (2.lem incl ij) { %2[lemcase=1.lemcase] _ 3 } 
	elif (2.lem incl liehket and 2.infin = prfprc) { 1[lemcase=$lemcase,sentinit=1.sentinit] _ 
	%liehket(vblex)[neg="",mood=indic,tense=pres,person=(if (1.person="") p3 else 1.person),number=1.number,infin=""] _ %2 _ 3 }
	else { 1 _ %2 _ 3 })) !!!Mun boran  > Båråv, oainnán su stoahkamin > oainnán son lea stoahkamin 
   | "pers V" 3: PRN %V.*.$function.$sentinit (if (1.function="@-FSUBJ→" and 2.infin="actio.ess") {1[lemcase=$lemcase,case=nom] 
	_ liehket(vblex_liehket_fin)[mood=indic,tense=pres,person=p3,number=1.number] _ %2} else (if 
	(1.person_number in first_sec_person_number and  1.person_number= 2.person_number) { %2[lemcase=1.lemcase,sentinit=1.sentinit]} 
	elif (2.lem incl ij and 1.function = "@SUBJ→") { %2[lemcase=1.lemcase]} 
	elif (2.lem incl liehket and 2.infin = prfprc) { 1[lemcase=$lemcase,sentinit=1.sentinit] _ 
	%liehket(vblex)[neg="",mood=indic,tense=pres,person=(if (1.person="") p3 else 1.person),number=1.number,infin=""] _ %2}
	else { 1 _ %2})) !!!Mun boran  > Båråv, oainnán su stoahkamin > oainnán son lea stoahkamin 
	| "pers VP" 3: prn.pers %VP.*.$function.$sentinit  (if (1.function="@-FSUBJ→" and 2.infin="actio.ess") {1[lemcase=$lemcase,case=nom] 
	_ liehket(vblex_liehket_fin)[mood=indic,tense=pres,person=p3,number=1.number] _ %2} else (if 
	(1.person_number in first_sec_person_number and  1.person_number= 2.person_number) { %2[lemcase=1.lemcase,sentinit=1.sentinit] } 
	elif (2.lem incl ij) { %2[lemcase=1.lemcase] } 
	elif (2.lem incl liehket and 2.infin = prfprc) { 1[lemcase=$lemcase,sentinit=1.sentinit] _ 
	%liehket(vblex)[neg="",mood=indic,tense=pres,person=1.person,number=1.number,infin=""] _ %2 }
	else { 1 _ %2 })) !!!Mun boran  > Båråv, oainnán su stoahkamin > oainnán son lea stoahkamin 
	| "pers leat" 3: prn.pers %leat@vblex.*."@+FMAINV" { 1 _ %2 }     
;


PCLE -> %pcle (if (1.lem/tl="") { } else {1}) ;


C -> 1: %cnjcoo {1} 
	| 1: %cnjsub {1}
	;

CLB ->  1: %cm {1} 
	|  1: %sent {1}
	;





S -> 
	"go @+FMAINV NP"  3: go@cnjsub %V.*."@+FMAINV" NP { 1[lemcase=$lemcase] _ 3 _ %2 }!!! go hállet beatnagiiguin
	| "VP cnjcoo VP" 1: %VP cnjcoo VP { 1[lemcase=$lemcase] _ %2 _ 3 } !
	| "V PCLE PRN NP" 1: %V PCLE PRN NP { %1 _ 2 _ 3 _ 4 }  !!! leat go dus appelsiinnat?
	| "VP PRN PP" 1: %VP PRN PP { %1 _ 2 _ 3 }  !!! mii leamaš stuorra giksin sutnje nuoraidskuvlla rájes.   
	| "leat@+FMAINV SUBJext" 3: %leat@vblex.*."@+FMAINV" NP.*."@←SUBJext" { %1 _ 2 }     
	| "leat@+FMAINV NP@←SUBJ" 3: %leat@vblex.*."@+FMAINV" NP.*."@←SUBJ" { %1 _ 2 }     
	| "leat@+FMAINV NP@←SUBJ prn@←SUBJ" 3:  %leat@vblex.*."@+FMAINV" NP.*."@←SUBJ" prn.*."@←SUBJ" { %1 _ 2 _ 3 }  !guovttis earát   
	| "@+FMAINV NP@←SUBJ" 1: %vblex.*."@+FMAINV" NP.*."@←SUBJ" { %1 _ 2 }     
	| "@+FMAINV prn@←SUBJ" 1: %vblex.*."@+FMAINV" prn.*."@←SUBJ" { %1 _ 2 }     
	| "dadjat ahte VP " 2: %[dadjat_verbs]@S ahte@C VP { %1 _ 3 } !!! mii oaidnit ahte lea sierra dárbu > vuojnnep la sierra dárbbo
	| "prn vfmain placetimeadv" 1: %PRN vblex.*."@+FMAINV" [placetimeadv]@AdvP  {%1 _ 3 _ 2} 
	| "placetimeadv np vfmain" 1: [placetimeadv]@AdvP NP  %vblex.*."@+FMAINV" {1 _ %3 _ 2} 
	| "NP V AdvP" 1: %NP V AdvP  {%1 _ 2 _ 3} 
	| "juoga rel S" 1: juoga@prn PRN.rel %S {1 _ 2 _ %3 } ! juoga masa
	| "NP VP NP" 1: NP %VP NP { 1[lemcase=$lemcase] _ %2 _ 3 } !Dán jagi son lea oahpaheaddjin.
	| "NP v aj np" 2: %NP vblex aj@AdvP NP  {%1 _ 2 _ 4 _ 3}
	| "C pers V NP" 2: C prn.pers %V NP (if (2.person_number in first_sec_person_number and  2.person_number= 3.person_number) { 1 _ 4 
	_ %3[lemcase=1.lemcase] } else { 1 _ 2 _ 4 _ %3 }) !Mun boran  > Båråv 
	| "C pers V PRN " 2: C prn.pers %V PRN (if (2.person_number in first_sec_person_number and  2.person_number= 3.person_number) { 1 _ 4 _ 
	%3[lemcase=1.lemcase] } else { 1 _ 2 _ 4 _ %3 }) ! go mii hárdit sin.
!!!	| "S cm C S" 1: S cm C %S { 1 _ 2 _ %3  } 
!!!	| "AdvP S" 1: AdvP %S {1 _ %2 } 
!!!	| "rel VP" 1: PRN.rel %VP {1 _ %2 }
!!!	| "rel S " 1: PRN.rel %S {1 _ %2 }
!!!	| "NP VP NP" 1: NP %VP NP { 1[lemcase=$lemcase] _ %2 _ 3 } 
!!!	| "NP VP pcle" 1: NP %VP pcle { 1[lemcase=$lemcase] _ %2 _ 3 } 
!!!	| "NP VP pcle NP" 1: NP %VP pcle NP { 1 _ %2 _ 3 _ 4 } 
!!!	| "AdvP NP VP" 1: AdvP NP %VP { 1 _ 2 _ %3  }
!!!	| "C NP VP" 1: C NP %VP { 1 _ 2 _ %3  }
!!!	| "AdvP VP NP" 1: AdvP %VP NP { 1 _ %2 _ 3  }
!!!	| "NP pcle VP" 1: NP pcle %VP { 1 _ 2 _ %3 }
!!!	| "vblex ahte " 1: %vblex ahte@C (if (1.function="@+FMAINV") { %1 } else { %1 _ 2 }) !!!lohká ahte > lohká 
!!!	| "VP NP AP C" 1: %VP NP AP C    { %1[lemcase=$lemcase] _ 2 _ 3 _ 4 }   ! 
!!!	| "V AP V" 1: %V AP V.*.[infin] ?(3.lem not incl copulas) { %1[lemcase=$lemcase] _ 2 _ 3 }   ! 
!!!	| "S NP" 1: S %NP { 1 _ %2 } ! 
!!! | "S NP AdvP" 1: S %NP AdvP { 1 _ %2 _ 3 } ! 
!!!	| "S ind NP" 1: S prn.ind %NP { 1 _ 2 _ %3 } ! 
!!!	| "@+FMAINV placetimeadv" 1: %S."@+FMAINV" [placetimeadv]@AdvP { 2[lemcase=1.lemcase] _ %1[lemcase=2.lemcase] } !!! Maid don barggat odne? > Majt uddni barga? skal ikke treffe aktan i soai stoahkaba álo ovttas šiljus stuora dálu olgobealde
!!!	| "S ahte S" 1: S.*."@+FMAINV" ahte@C %S { 1 _ %3  } 
!!!	| "C S" 1: C %S { 1 _ %2 } 
!!!	| "pers VP" 2: prn.pers %VP.$function (if (1.person_number in first_sec_person_number and  1.person_number= 2.person_number)
!!!	{ %2[lemcase=1.lemcase] } else { 1 _ %2 }) !Mun ferten borrat  > Båråv             
    ;

