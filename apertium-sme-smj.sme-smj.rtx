!!!!!!!!!!!!!!!
!!  ATTRIBUTE CATEGORIES
!!!!!!!!!!!!!!!

function = "@+FAUXV" "@\+FAUXV" "@\+FMAINV" "@+FMAINV" "@-F←ADVL" "@-F←ADVL-ine" "@-F←ADVL-ela" "@-F←OBJ" "@-F←OPRED" "@-F←SUBJ" "@-FADVL→" "@-FAUXV" "@-FMAINV" "@-FOBJ→" "@-FSUBJ→" "@←ADVL" "@←ADVL-ela" "@←ADVL-ine" "@←OBJ" "@←OPRED" "@←PPRED" "@←SPRED" "@←SUBJ" "@→A" "@→ADVL" "@→CC" "@→N" "@→Num" "@→P" "@→Pron" "@A←" "@ADVL" "@ADVL←" "@ADVL→" "@ADVL-ela→" "@ADVL-ine→" "@ADVLcs-ela→" "@ADVLcs-ine→" "@ADVLqst-ela→" "@ADVLqst-ine→" "@ADVLhab→" "@←ADVLhab" "@←SUBJext" "@ADVL→CS" "@APP-ADVL←" "@APP-N←" "@APP-Pron←" "@CNP" "@COMP-CS←" "@CVP" "@HNOUN" "@INTERJ" "@N←" "@Num←" "@OBJ→" "@OPRED→" "@P←" "@PCLE" "@Pron←" "@SPRED←OBJ" "@SPRED→" "@SUBJ→" "@VOC" "@X"  ;
pos = n adj adv ;
gender = f m ;
number = sg du pl ;
prn_type_other = rel dem ind itg ;
prn_type = pers ref res [prn_type_other] ;
np_type_other = top cog org sem_ani ;
np_type = ant [np_type_other] ;
n_type = g3 nomag ;
num_type = arab ;
case = acc nom gen loc ine ela com ess ill ;
poss = ("" "") px1sg px1du px1pl px2sg px2du px2pl px3sg px3du px3pl ;
person = p1 p2 p3 ;
attr = attr ;
inf = inf ;
foc = foc_neg-ge foc_pos-ge foc_neg-k foc_pos-k ;
comp = der_comp der_superl ;
infin = supn inf prfprc ger "actio.ess" "actio.gen" "actio.loc" "actio.ela" "actio.ess" ;
conneg = conneg ;
actiocase = "actio.ess" "actio.gen" "actio.loc" "actio.ela" ;
actioloc = "actio.loc" ;
actioela = "actio.ela" ;
neg = neg ;
qst = qst ;
cltl = cltl ;
trans = tv iv ;
mood = indic imp cond pot ;
mood_tense = "pot.pres" "cond.pres" ;
tense = pres pret ;
a_nomag = nomag ;
a_actio = actio ;
a_hab = ←hab→ ;
adpos = pr post ;
cc = cnjcoo ;
cs = cnjsub ;
pcle = pcle ;
a_vuota = ex_attr ;
person_number = "p1.sg" "p1.du" "p1.pl"
                "p2.sg" "p2.du" "p2.pl"
                "p3.sg" "p3.du" "p3.pl" ;
first_sec_person_number = "p1.sg" "p1.du" "p1.pl" "p2.sg" "p2.du" "p2.pl" ;
                
deriv = der_nomag der_dimin der_alla der_halla der_aadv der_caus der_t der_l der_ahtti der_ahtte der_vuota der_d der_h der_laakan der_laagasj der_lágan der_lágán der_muš der_mus der_nammasaš der_nammasasj der_saš der_sasj der_lasj der_dibme der_geahtes der_ahtes der_car der_nomact der_inchl der_vuota der_passl der_passs ;

deriv2 = der_dimin der_alla der_halla ;
cmp = cmp_sggen cmp_sgnom cmp_attr cmp_plgen cmp_sh cmp_hyph cmp_oblhyph cmp_cit ;
hyph = cmp_hyph ;
onlycmp = cmp ;
cmpsplitr = cmp_splitr ;

semhum = sem_group sem_hum sem_hum-abstr sem_hum-prof sem_act_hum sem_ani_body-abstr_hum sem_ani_build_hum_txt sem_ani_group_hum sem_ani_hum sem_ani_hum_plc sem_ani_hum_time sem_aniprod_hum sem_body_group_hum sem_body_group_hum_time sem_body_hum sem_cat_group_hum sem_cat_group_hum_plc sem_clth_hum sem_domain_hum sem_edu_group_hum sem_edu_hum sem_event_hum sem_feat-psych_hum sem_fruit_hum sem_geom_hum_plc sem_group_hum sem_group_hum_org sem_group_hum_plc sem_group_hum_plc-abstr sem_group_hum_prod-vis sem_group_hum_time sem_hum_lang sem_hum_lang_plc sem_hum_lang_time sem_hum_mat_tool sem_hum_obj sem_hum_org sem_hum_part sem_hum_plant sem_hum_plc sem_hum_sign sem_hum_tool sem_hum_tool-it sem_hum_veh sem_hum_wthr ;

semtime = sem_time sem_time-clock sem_ani_hum_time sem_ani_time sem_body_group_hum_time sem_body_time sem_event_time sem_group_hum_time sem_hum_lang_time sem_measr_obj_time sem_measr_time sem_plc_time sem_plc_time_wthr sem_time_wthr ;
semother = sem_act sem_adr sem_amount sem_ani sem_aniprod sem_body sem_body-abstr sem_build sem_build-room sem_buildpart sem_cat sem_clth sem_clth-jewl sem_clthpart sem_ctain sem_ctain-abstr sem_ctain-clth sem_curr sem_date sem_dance sem_dir sem_domain sem_drink sem_dummytag sem_edu sem_event sem_feat sem_feat-phys sem_feat-psych sem_feat-measr sem_fem sem_food sem_food-med sem_fruit sem_furn sem_game sem_geom sem_ideol sem_id sem_lang sem_mal sem_mat sem_measr sem_money sem_obj sem_obj-clo sem_obj-cogn sem_obj-el sem_obj-ling sem_obj-rope sem_obj-surfc sem_org sem_part sem_perc-cogn sem_perc-emo sem_perc-phys sem_perc-psych sem_phonenr sem_plant sem_plantpart sem_plc sem_plc-abstr sem_plc-elevate sem_plc-line sem_plc-water sem_pos sem_process sem_prod sem_prod-audio sem_prod-cogn sem_prod-ling sem_prod-vis sem_rel sem_route sem_rule sem_semcon sem_sign sem_sport sem_state sem_state-sick sem_substnc sem_sur sem_symbol sem_tool sem_tool-catch sem_tool-clean sem_tool-it sem_tool-measr sem_tool-music sem_tool-write sem_txt sem_veh sem_wpn sem_wthr sem_year sem_act_fruit sem_act_group sem_act_plc sem_act_route sem_act_tool-it sem_amount_build sem_amount_semcon sem_ani_build sem_ani_buildpart sem_ani-fish sem_ani_group sem_ani_group_prod-vis sem_ani_plc sem_ani_plc_txt sem_ani_veh sem_aniprod_obj-clo sem_aniprod_perc-phys sem_aniprod_plc sem_aniprod_plc_route sem_body-abstr_feat-psych sem_body-abstr_prod-audio_semcon sem_body_body-abstr sem_body_clth sem_body_food sem_body_mat sem_body_measr sem_body_obj_tool-catch sem_body_plc sem_body_plc-elevate sem_build_clthpart sem_build_edu_org sem_build_event_org sem_build_obj sem_build_org sem_build_route sem_build-room_cat_ctain_mat sem_buildpart_cat sem_buildpart_cat_ctain sem_buildpart_cat_ctain_mat sem_buildpart_ctain sem_buildpart_ctain_mat sem_buildpart_ctain_obj sem_cat_edu sem_cat_obj sem_clth-jewl_curr sem_clth-jewl_curr_obj sem_clth-jewl_curr_obj_org sem_clth-jewl_fruit sem_clth-jewl_money sem_clth-jewl_plant sem_clth_obj-clo sem_ctain-abstr_org sem_ctain-clth_plant sem_ctain-clth_veh sem_ctain_feat-phys sem_ctain_furn sem_ctain_plc sem_ctain_tool sem_ctain_tool-measr sem_curr_org sem_dance_org sem_dance_prod-audio sem_domain_food-med sem_domain_prod-audio sem_drink_plant sem_edu_event sem_edu_geom sem_edu_mat sem_edu_org sem_event_food sem_event_plc sem_event_plc-elevate sem_feat-measr_plc sem_feat-phys_tool-write sem_feat-phys_veh sem_feat-phys_wthr sem_feat-psych_plc sem_food_obj-surfc sem_feat_plant sem_food_perc-phys sem_food_plant sem_food_sign sem_game_obj-play sem_geom_obj sem_group_org sem_group_prod-vis sem_group_sign sem_group_txt sem_lang_tool sem_mat_plant sem_mat_txt sem_measr_sign sem_money_obj sem_money_org sem_money_part sem_money_txt sem_obj-play sem_obj-play_sport sem_obj_semcon sem_obj_sign sem_obj_veh sem_clth-jewl_org sem_obj_symbol sem_org_rule sem_org_buildpart sem_org_txt sem_org_veh sem_part_prod-cogn sem_part_substnc sem_perc-emo_wthr sem_plant_plantpart sem_plant_tool sem_plant_tool-measr sem_plc-abstr_rel_state sem_plc-abstr_route sem_plc_pos sem_plc_route sem_plc_semcon sem_plc_state sem_plc_substnc sem_plc_substnc_wthr sem_plc_tool-catch sem_plc_txt sem_plc_wthr sem_prod-audio_txt sem_prod-cogn_txt sem_semcon_txt sem_obj_state sem_substnc_wthr sem_state-sick_substnc sem_obj-ling_obj-surfc sem_org_prod-audio sem_org_prod-cogn sem_org_prod-vis ;

semtag = [semtime] [semhum] [semother] ;

!!!!!!!!!!!!!!!
!! OUTPUT PATTERNS
!!!!!!!!!!!!!!!

VP: _.trans.mood.tense.person.number.infin ; !?
V: _.trans.mood.tense.person.number.infin.function ; !?
NegVP:  _.trans.neg.mood.tense.conneg ;
NP: _.n_type.number.case.poss.cmp.hyph.onlycmp.foc.cltl ; 
PRN: _.prn_type.person.number.case.poss.attr.foc ; 
S: _.function ; !?
InfinS: _ ;
AdvP: _.pos.function ;
A: _ ;
AP: _ ;
PP: _ ;
C: _ ;
PCLE: _ ;

cnjcoo: _ ;
cnjsub: _ ;

N: _.n_type.number.case.poss.cmp.hyph.onlycmp ; 
n_only: _.number.case.attr.poss.cmp.hyph.onlycmp ; 
n_type: _.n_type.number.case.poss ; 

n: (if (1.n_type/tl = "") 1(n_only)  
      else 1(n_type)) ;


adj_to_noun: <n>.n_type.number.case ;

!n: (if (1.deriv = der_nomag or 1.deriv = der_nomag) 1(vblex_der_n)  
!      else 1(n_norm)) ;


!n_der: _.deriv.<n>.number.case.poss.cmp.onlycmp.cltl ;

post: _ ;
pr: _ ;
adpos: _ ;
qst: _ ;
pcle : _.qst ;
adv: _.poss ;
num: _.num_type.number.case.attr ;

np_ant: _.<ant>.gender.number.case.attr ;
np_other: _.np_type.number.case.attr ;
np: (if (1.np_type = ant) 1(np_ant)
      else 1(np_other)) ;

prn_pers: _.<pers>.person.number.case ;
prn_ref: _.<ref>.number.case.poss ;

noun_to_vblex_infin: <vblex>.trans.mood.tense.infin ;
prn_other: _.prn_type_other.number.case.attr.foc ;
prn: (if (1.prn_type = pers) 1(prn_pers)
      elif (1.prn_type = ref) 1(prn_ref)
      else 1(prn_other)) ;

adj_attr: _.attr.cmp.onlycmp ;
adj_pred: _.number.case.poss.cmp.onlycmp ;
adj_comp: _.comp.<adj>.number.attr.case.poss.cmp.onlycmp ;
adj_adv:_.<der_aadv>.<adv> ;

adj: (if (1.deriv = der_aadv) 1(adj_adv) elif (1.comp = der_superl or 1.comp = der_comp) 1(adj_comp) elif (1.attr = attr) 1(adj_attr)
      else 1(adj_pred)) ;
     
vblex_fin: _.trans.neg.mood.tense.person.number.qst ; 
vblex_inf: _.trans.mood.tense.infin ;
vblex_conneg: _.trans.mood.tense.conneg ;
vblex_mood2: _.trans.neg.mood.person.number.qst ;
vblex_der_n: _.trans.deriv.<n>.number.case.poss.cmp.onlycmp.cltl ;
vblex_der_vblex: _.trans.deriv.<vblex>.mood.infin.tense.person.number.qst ;

vblex: (
        if (1.deriv = der_passl or 1.deriv = der_passs) 1(vblex_der_vblex)
        elif (1.deriv = der_nomag or 1.deriv = der_nomact) 1(vblex_der_n)
        elif (1.conneg = conneg ) 1(vblex_conneg)
        elif (1.mood = "cond" or 1.mood = "pot") 1(vblex_mood2)
        elif (1.infin = "") 1(vblex_fin)
        else 1(vblex_inf)
       ) ;


!!!!!!!!!!!!!!!
!! TAG-REWRITE RULES
!!!!!!!!!!!!!!!

!person_number > poss : "p1.sg" px1sg, "p1.du" px1du, "p1.pl" px1pl,
!                       "p2.sg" px2sg, "p2.du" px2du, "p2.pl" px2pl,
!                       "p3.sg" px3sg, "p3.du" px3du, "p3.pl" px3pl ;
!poss > person_number : px1sg "p1.sg", px1du "p1.du", px1pl "p1.pl",
!                            px2sg "p2.sg", px2du "p2.du", px2pl "p2.pl",
!                            px3sg "p3.sg", px3du "p3.du", px3pl "p3.pl" ;
! a rule for converting person+number tag pairs to possessive tags
! this applies if you write poss=1.person_number or 1.person_number>poss
! "" because these are pairs instead of single tags

poss > person : px1sg p1, px1du p1, px1pl p1,
                px2sg p2, px2du p2, px2pl p2,
                px3sg p3, px3du p3, px3pl p3 ;

poss > number : px1sg sg, px1du du, px1pl pl,
                px2sg sg, px2du du, px2pl pl,
                px3sg sg, px3du du, px3pl pl ;

!actiocase > actiocase : "actio.loc" "actio.ela" ;

case > case : loc ine ;
foc > foc : foc_pos-ge foc_pos-k, foc_neg-ge foc_neg-k ; !from sme to smj type

!!!!!!!!!!!!!!!
!! REDUCTION RULES
!!!!!!!!!!!!!!!

kin-nouns = "ieddne" "niejdda" "báhttja" "áhttje" "áhkko" "áddjá" "viellja" "oabbá" ;

foclemmas = "okta" ;

not-move-adv = "aj" "duodaj" "vargga" "náv" "nav" "gal" "de" ;

smj-supn-triggerverbs = "bivddit" "barggat" "dahkat" "hásstalit" "vælggogissan dahkat" "ávvudallat" "ávttjit" ;

adj_nottriggingsupn = "álkke" "hiebalasj" "suohtas" "vájvve" "guhkálasj" "ahket" "ájnas" "gássjel" "tjiehppe" ;

not-usually-supn-verbs = "subtsastit" "åvddånit" ;

sme-rek-verbs = "lijkkut" "berustit" "ballat" ;

moveverbs = "vuolgget" "mannat" "bisánit" ;


actio_ill_verbs = "liikot" ;
loc2acc_verbs = "guossidit" ;
ill2ine_verbs = "báhtset" "báhcit" ;
birrapx_verbs = "geahččat" ;
loc_verbs = "hållat" "subtsastit" "ságastallat" "báhtset" "hupmat" "muitalit" "ságastallat" ;
muitalit_vblex = "subtsastit" "almodit" "javllat" "mierredit" ; 
hållat_verbs = "hållat" "ságastallat" ;
loc2ill_verbs = "sæbrrat" ;
acc2ela_verbs = "hieredit" ;
acc2ill_verbs = "vájkkudit" "tjágŋat" "guosskat" ;
com2ill_verbs = "vásstedit" "oktiivástidit" ;
loc2com_verbs = "rahtjat" ;
auxverbs = "máhttet" "sáhttit" "áigut" "máhttit" "leat" "liehket" "galggat" "hæhttut" "ájggot" ;
attrprn = "juohke" "juohkka" "dakkár" "iesjguhti" "iešguhtet" "galle" "galla" ;
prnnotfocsme =  "mihkke" "guhtemuš" "iešguhtet" ;
prnnotfocsmj = "soames" "mige" "iesjguhti" ;
placetimeadv = "odne" "ikte" "ihttin" "dalle" "uddni" "idet" "iektu" "dalloj" "doppe" "gos" "gånnå" ;

dadjat_verbs = "almodit" "ballat" "doajvvot" "dåbddåt" "dåbddåt¹" "dåbdåstit" "gájbbedit" "gielestit" "javllat" "jáhkket" "låhkåt" "merustallat" "miejnnit" "mierredit" "subtsastit" "sárnnot" "tjielggit" "tjuottjodit" "vuojnnet" "vuornnot" "vuosedit" "almmuhit" "jáhkkit" "dadjat" "lohkat" "meroštallat" "meidnet" "oaivvildit" "gáibidit" "dovdat" "muitalit"  ;

lohkat_verbs = "lohkat" "dadjat" ; !ii loga váttisin

passshortverbs = "vuojnnet" ;

verb3st = "vájbbadit" "hiebadit" "sjaddadit" "gájddadit" "suddadit" "navddadit" "vavddadit" "gievddadit" "rievddadit" "háldadit" "niegadit" "jegadit" "segadit" "tsieggadit" "salggadit" "tjálggadit" "gærggadit" "ravggadit" "tjielgadit" "vuolgadit" "álgadit" "juogadit" "bargadit" "njágadit" "idjadit" "dádjadit" "biejadit" "goarjjadit" "tjuojadit" "gehtjadit" "gáhtjadit" "tjuottjadit" "báhkadit" "sáhkadit" "liekkadit" "tsiekkadit" "vikkadit" "davkkadit" "hávkkadit" "jávkkadit" "valkadit" "sjåpkadit" "jaskadit" "miesskadit" "guosskadit" "njuosskadit" "huvkadit" "gieladit" "bievlladit" "dibmadit" "semadit" "tjajmadit" "dåjmadit" "tjuolmadit" "nammadit" "almmadit" "tjalmmadit" "tjuolmmadit" "ármmadit" "gámadit" "dåmadit" "jiednadit" "viednadit" "vihpadit" "åhpadit" "låhpadit" "gahppadit" "sieradit" "bátsadit" "vuovsadit" "nahtadit" "giehtadit" "duhtadit" "ruhtadit" "láktadit" "mastadit" "asstadit" "masstadit" "goasstadit" "gástadit" "sjiehttadit" "suhttadit" "buvtadit" "åjvadit" "dálvadit" "livvadit" "oajvvadit" "suovvadit" "hærvvadit" "luvvadit" "sagŋadit" "loabedit" "gájbbedit" "álbedit" "hálbedit" "tjuorbedit" "gåbdedit" "diededit" "miededit" "bidedit" "vijdedit" "sirdedit" "åvdedit" "gåvdedit" "rádedit" "jådedit" "ráfedit" "irggedit" "bárggedit" "moalgedit" "tjuovgedit" "sjuvgedit" "bajedit" "ruodjedit" "galjedit" "sjivnnjedit" "givnjedit" "vuojedit" "galsjedit" "gietjedit" "miehtjedit" "bultjedit" "gártjedit" "loattjedit" "stávtjedit" "sloahkedit" "viehkedit" "sjuohkedit" "guhkedit" "gajkedit" "biesjkedit" "siekkedit" "bilkkedit" "rákkedit" "båkkedit" "njalkedit" "skoalkedit" "hielkedit" "baskedit" "tjoaskedit" "nuoskedit" "biesskedit" "tsuskedit" "nåskedit" "tsavkedit" "livkedit" "nivkedit" "bávkedit" "jaledit" "skoaledit" "tsieledit" "vieledit" "biledit" "bielledit" "vuoledit" "háledit" "tjáledit" "hábmedit" "galmmedit" "gåmedit" "banedit" "manedit" "oanedit" "loanedit" "guddnedit" "ienedit" "dienedit" "jienedit" "linedit" "riejnedit" "bijnedit" "binnedit" "sárnnedit" "unnedit" "gánnedit" "iehpedit" "giehpedit" "duoppedit" "dáppedit" "dåppedit" "smaredit" "goaredit" "goabredit" "ieredit" "hieredit" "vieredit" "buoredit" "stuoredit" "doarredit" "dierredit" "mierredit" "láhkamierredit" "lasedit" "lamsedit" "vuosedit" "dássedit" "joatsedit" "uhtsedit" "giettsedit" "váttsedit" "gåtsedit" "givsedit" "mávsedit" "másedit" "vásedit" "låsedit" "luohtedit" "hiejtedit" "goastedit" "koastedit" "vásstedit" "moattedit" "guottedit" "gáttedit" "davedit" "slijvedit" "rujvedit" "vájvedit" "gárvedit" "buolvvedit" "árvvedit" "maŋedit" "tjieŋedit" "sagŋedit" "sisŋedit" "sahkkidit" "tsahkkidit" "dåhkkidit" "tjåhkkidit" "validit" "gallidit" "viellidit" "buollidit" "ållidit" "dållidit" "háhppidit" "sjierridit" "ánssidit" "guossidit" "aktidit" "duolvvidit" "guggŋidit" "dåbdijdit" "bådijdit" "salgijdit" "njálgijdit" "gålgijdit" "njålgijdit" "gurgijdit" "bårgijdit" "jårgijdit" "tjuovgijdit" "risjijdit" "tjátjijdit" "smáhkijdit" "låsjkijdit" "mukkijdit" "tjåskijdit" "guosmijdit" "tsivnijdit" "dabrijdit" "jurijdit" "tjivrijdit" "suvrijdit" "gárijdit" "mårijdit" "habsijdit" "bisijdit" "hapsijdit" "guohtsijdit" "båhtsijdit" "njattijdit" "skilájdit" "imájdit" "vájaldit" "syhkaldit" "jakkaldit" "jiekkaldit" "suojvaldit" "bárggeldit" "tjuottjeldit" "åskeldit" "maneldit" "vuosteldit" "vatteldit" "naveldit" "sájveldit" "tjievvildit" "vajoldit" "budáldit" "ganjáldit" "biváldit" "njárbbodit" "tjábbodit" "noadodit" "vijddodit" "buojddodit" "vájddodit" "gærddodit" "suddodit" "vuododit" "bivdodit" "soaggodit" "lijggodit" "rájggodit" "nælggodit" "ålgodit" "gurgodit" "vágodit" "oadjodit" "vuodjodit" "lådjodit" "galljodit" "luojodit" "girjodit" "buossjodit" "rássjodit" "gártjodit" "tjuottjodit" "tsoahkodit" "suohkodit" "buojkodit" "næjkodit" "boakkodit" "biekkodit" "goalkodit" "tsoalkodit" "nuoskodit" "basskodit" "tjoasskodit" "båŋkodit" "boalodit" "allodit" "tjallodit" "goallodit" "sillodit" "juollodit" "vuollodit" "gálodit" "hibmodit" "fábmodit" "almodit" "ilmodit" "joajmmodit" "slæmmodit" "gåmodit" "binnodit" "sánodit" "gihpodit" "dæhppodit" "vuorodit" "garrodit" "irrodit" "hirrodit" "skirrodit" "gievrrodit" "divrrodit" "suvrrodit" "várrodit" "værrodit" "návrodit" "basodit" "hasodit" "bisodit" "guossodit" "låssodit" "hæssodit" "håhtsodit" "njátsodit" "viertodit" "goasstodit" "vasstodit" "ruosstodit" "hástodit" "dættodit" "ævtodit" "gárvodit" "livvodit" "tjiegŋodit" "slimbardit" "slåbardit" "skuoldardit" "vándardit" "tjiegardit" "guokkardit" "lillardit" "gabmardit" "giemardit" "sáŋardit" "náberdit" "skutjerdit" "gåbmerdit" "dieverdit" "skidárdit" "slidárdit" "tjagárdit" "gitjárdit" "gamárdit" "vitsárdit" "jårbudit" "rádudit" "ráfudit" "vielgudit" "gilgudit" "suorgudit" "tjuovgudit" "bahudit" "addjudit" "sjevnjudit" "gåhtjudit" "åttjudit" "måjudit" "tsehkudit" "rusjkudit" "vájkkudit" "låkkudit" "småkkudit" "vuorkudit" "viskudit" "tjeludit" "jalludit" "lásjmudit" "almmudit" "germudit" "gámudit" "ruonudit" "lånudit" "tjáhpudit" "smårudit" "ruopsudit" "juvsudit" "fásstudit" "dålvudit" "ávvudit" "vuorbbádit" "tjadádit" "noaddádit" "hávddádit" "bagádit" "lagádit" "riegádit" "fággádit" "virgádit" "snjurgádit" "mugádit" "mægádit" "rægádit" "risjádit" "gatjádit" "snjibtjádit" "tjiehkádit" "goajkádit" "jæskádit" "njoaládit" "ælládit" "suoládit" "tjajmádit" "tjanádit" "manádit" "tjáhppádit" "moarádit" "sirádit" "basádit" "muossádit" "gæssádit" "luojttádit" "mujttádit" "såjddådit" "nårddådit" "håjggådit" "tjålggådit" "dåssjådit" "gåttjådit" "måjådit" "tjåhkådit" "gåjkkådit" "tsåkkådit" "gållådit" "mållådit" "gålådit" "tjårmmådit" "bårådit" "håhtsådit" "åtsådit" "gåtsådit" "njåtsådit" "jåvsådit" "båsådit" "gåsådit" "jåttådit" "gåvådit" "dågŋådit" "sjánjagit" "bávtjagit" "ganugit" "dárbahit" "návddahit" "givnnjahit" "jalkkahit" "merkahit" "vellahit" "vællahit" "huomahit" "dabrrahit" "gahtsahit" "huhttahit" "vájvahit" "duodjuhit" "háhkuhit" "ræjnnuhit" "ruhtsuhit" "huomáhit" "tjåhkkåhit" "idatjit" "girdatjit" "vuordatjit" "bårdatjit" "bivdatjit" "ådatjit" "begatjit" "sjavnjatjit" "vuotjatjit" "bajkatjit" "belkatjit" "gáskatjit" "buolatjit" "gálatjit" "tjálatjit" "tsábmatjit" "bájnatjit" "bånatjit" "váratjit" "váttsatjit" "mávsatjit" "bájtatjit" "májstatjit" "åstatjit" "garvatjit" "harvatjit" "baldáskit" "vaddalit" "rijddalit" "guoddalit" "tjoavddalit" "bivddalit" "balldalit" "gulldalit" "válldalit" "tsirggalit" "gurggalit" "gárggalit" "suodjalit" "dådjalit" "doarjjalit" "várjjalit" "sáhtjalit" "gæhttjalit" "næjkkalit" "goalkkalit" "ravkkalit" "livkkalit" "nivkkalit" "gasskalit" "adnalit" "vuojnnalit" "bassalit" "diehtalit" "båhtalit" "biktalit" "buktalit" "nuktalit" "hásstalit" "bæsstalit" "bæhttalit" "gijttalit" "luojttalit" "mujttalit" "hæjttalit" "æjvvalit" "árvvalit" "dieddelit" "vuodjelit" "tjuodtjelit" "tjuovvolit" "skerrulit" "navválit" "gåddålit" "bårggålit" "jårggålit" "tsåggålit" "dådjålit" "råhkålit" "åhtsålit" "håhttsålit" "jåhtålit" "båktålit" "giddanit" "liegganit" "suorgganit" "sadjanit" "lahkanit" "sahkanit" "sehkanit" "tjåhkanit" "báhkkanit" "boarkkanit" "tsuovkkanit" "gibmanit" "almmanit" "rájnnanit" "hehpanit" "duohpanit" "sierranit" "njuorranit" "bæjsstanit" "luottanit" "hevvanit" "gæjvvanit" "luovvanit" "ålggunit" "bahunit" "hedjunit" "vádnunit" "nannunit" "guorrunit" "gárvvunit" "sjávvunit" "maŋŋunit" "duobbánit" "dábbánit" "vijddánit" "gáddánit" "rájggánit" "badjánit" "ádjánit" "hádjánit" "tjádjánit" "hárjjánit" "lassjánit" "boaktjánit" "gajkkánit" "hoavkkánit" "allánit" "gallánit" "doallánit" "vuollánit" "lullánit" "hállánit" "vællánit" "gæhppánit" "buorránit" "ærránit" "værránit" "bisánit" "lassánit" "bissánit" "guoktánit" "davvánit" "gárvvánit" "åvddånit" "gåvddånit" "hådjånit" "bårjjånit" "håhkkånit" "smållånit" "gåbmånit" "sårmmånit" "dårrånit" "båhtånit" "báhtarit" "stávttjurit" "njimmurit" "ginntsurit" "tsaggasit" "tjavggasit" "tsakkasit" "tjiesskasit" "nuollasit" "njámmasit" "tjadnasit" "rahpasit" "dahppasit" "guorrasit" "sárrasit" "njadtsasit" "máhttsasit" "harttsasit" "rahtasit" "basstasit" "konkurssit" "buodusit" "hádjusit" "mådjusit" "målssusit" "ávvusit" "tjoavddásit" "tjuolldásit" "juohkásit" "njuohkásit" "gásskásit" "tjállásit" "jávvásit" "tjávvásit" "bådnjåsit" "båhtjåsit" "råhtåsit" "rábastit" "duodastit" "sárgastit" "ságastit" "berjastit" "vilsjastit" "ruossjastit" "gehtjastit" "tjuottjastit" "njahkastit" "svahkastit" "sihkastit" "tsakkastit" "biekkastit" "dálkastit" "njaskastit" "illastit" "lávlastit" "tjuojmastit" "duolmastit" "suomastit" "tjuormastit" "åmastit" "jienastit" "májnastit" "tjerastit" "subtsastit" "gartsastit" "hartsastit" "gattsastit" "njattsastit" "ruohtastit" "suovastit" "skielbestit" "rubestit" "srubestit" "strubestit" "oadestit" "soadestit" "bidestit" "tjidestit" "suojgestit" "doargestit" "gurgestit" "gárgestit" "bårgestit" "jårgestit" "jugestit" "sluvgestit" "bávtjestit" "rájkestit" "bálkestit" "dárkestit" "duvkestit" "alestit" "gielestit" "málestit" "njamestit" "ármestit" "lånestit" "oahpestit" "doarestit" "oasestit" "tsåjtsestit" "luojtestit" "vattestit" "rejddistit" "boagostit" "boakkostit" "gaskostit" "bælostit" "tjalmostit" "njálmostit" "guovdustit" "berustit" "merustit" "ájrustit" "dárustit" "vástustit" "ladástit" "jugástit" "ijástit" "salástit" "gulástit" "sulástit" "sámástit" "ganástit" "nuppástit" "birástit" "gæsástit" "dåbdåstit" "låjdåstit" "åvdåstit" "ådåstit" "bådåstit" "jårgåstit" "bårjåstit" "måhkåstit" "råkkåstit" "bålåstit" "båråstit" "måråstit" "målsåstit" "måttsåstit" "båsåstit" "båltåstit" "gåvåstit" ;

AdvP -> %adv.*.$function { %1 }
      | %adv cnjcoo adv { %1 _ 2 _ 3 }
      | adv %adv { 1 _ %2 }
      | pcle %adv { 1 _ %2 }
      |  %adv pcle { %1 _ 2 }
      ;


!AP -> "adj" %adj { 1 }
!    | "adv  adj" adv %adj { 1 _ 2 }
!    ;

AP -> %adj (if (1.pos/tl=n) {%1(adj_to_noun)} else-if (1.deriv=der_aadv) {%1(adj_adv)} else {%1})
    | AdvP  %adj { 1 _ %2}
    | adj C %adj { %1 _ 2 _ %3} 
    ;


N ->    1: %n { %1[lemcase=$lemcase] }  
	  | 2: n.*.cmp  %N { 1 + %2 } 
	  | 2: adj.*.cmp  %N { 1 + %2 } 
	  | 1: N cnjcoo."@CNP" %N ?(1.function = 3.function) { 1 _ 2 _ %3 } !!! coordination
      | 3: %n.*.loc { %1[case=(if (1.function = "@←ADVL-ela" or 1.function = "@ADVL-ela→") ela else ine)] } 
      | 4: [attrprn]@prn %n.*.loc { 1[foc=(if (1.lem in prnnotfocsmj) "" else 1.foc)] _  %2[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)]} 
      | 4: prn %n.*.loc { 1[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)] _  %2[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)]} 
      | 4: %gohcu@n.*.pl.gen { %1(noun_to_vblex_infin) } !denne må generaliseres, hvordan uttrykke pos?
      | 3: %num.sem_year.sg.loc  {  jahke@n.sg.ine _ %1[case=nom] }
      | 3: %num.sem_year.sg.ill  {  jahke@n.sg.ill _ %1[case=nom] }
      | 1: %num  { %1 }
      ; 

PRN ->  2: %[prnnotfocsme]@prn  { %1[foc=""] }
       | 1:  %prn  { %1[lemcase=$lemcase,foc=(if (1.lem in prnnotfocsmj) "" else 1.foc)] }
       ;

NP ->  %N { %1[lemcase=$lemcase] } 
      | %N PCLE { %1 _ 2 }
!      | PRN %N { 1[case=(if (2.case = ela) ela else ine)] _ %2 }
!     | 2: n.*."@→N" %N { 1 _ 2} !sámi mánáfálaldaga
      | %prn  { %1[poss=$poss] }
      | %prn PCLE { %1 _ 2 }
      ;


NP -> 2: %num.*.loc n.*.loc { 1[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)] _ 
      %2[case=(if (2.function = "@←ADVL-ela" or 2.function = "@ADVL-ela→") ela else ine)] } 
    | 2: %num n {1[case=(if (1.lem = akta) 1.case elif (1.case = acc and 2.case = acc) nom else 1.case)]  _ 2[case=(if (1.lem = akta) 2.case elif (1.case = acc and 2.case = acc) gen else 2.case)]} 
    | 2: prn.dem %num.*.loc n.*.loc { 1 _ 2[case=(if (3.function = "@←ADVL-ela" or 3.function = "@ADVL-ela→") ela else ine)] _ 
      %3[case=(if (3.function = "@←ADVL-ela" or 3.function = "@ADVL-ela→") ela else ine)] }
    | 2: prn.dem %num n {1 _ 2[case=(if (2.lem = akta) 2.case elif (2.case = acc and 3.case = acc) nom else 2.case)]  _ 3[case=(if (2.lem = akta) 3.case elif (2.case = acc and 3.case = acc) gen else 3.case)]}  !3.lem not = akta (1.case not = 2.case)
    ;
    
    
! | %num n [$number=(if (1.lem = "1") sg else pl)] { 1 _ 2[number=1.number] } ; !for shit in guokte biillat

NP -> prn.ref %n { 1 _ 2}  !ietjam viellja
    | prn.dem %n { 1 _ 2}  !dav vielja
    | prn %n { 1 _ 2} !juohke sajis
    | 2: n.*."@→N" %N { 1 _ 2} !sámi máná
    ;


NP ->  "adj NP" AP  %NP { 1 _ %2[poss=$poss] }
    | "buorre NP" buorre@adj  %NP { 1 _ %2[poss=$poss] }
!    | "adj adj NP" adj.attr adj.attr %NP { 1 _ 2 _ %3[poss=$poss] } 
    | "prn.gen NP" prn.*.gen  %NP { 1 _ %2[poss=$poss] }
    | "np" %np { 1 } 
    | "prn" %prn { %1 } 
    ;

!NP -> NP cnjcoo %NP { 1 _ 2 _ %3[case=$case] } ;


!p1_or_p2 = p1 p2 ;
!NP -> prn.pers.[p1_or_p2].*.gen %NP
!      { %2[poss=1.person_number]
!       ! the following is equivalent
!       ! 2[poss=(if (1.person = p1 and 1.number = sg) px1sg
!       !         if (1.person = p1 and 1.number = du) px1du
!       !         if (1.person = p1 and 1.number = pl) px1pl
!       !         if (1.person = p2 and 1.number = sg) px2sg
!       !         if (1.person = p2 and 1.number = du) px2du
!       !         if (1.person = p2 and 1.number = pl) px2pl
!       !         if (1.person = p3 and 1.number = sg) px3sg
!       !         if (1.person = p3 and 1.number = du) px3du
!       !         if (1.person = p3 and 1.number = pl) px3pl
!       !        )]
!      } ;
!NP -> 2: %n.coll [$number=pl] { 1 } ; !"gålmås båhti fæsstaj". endrer ikke verbet til sg. Trengs fordi regelen S -> NP VP { 1 _ 2[number=1.number] } endrer verbet til sg fordi "Mihcamárat leat geassemánus." må endre verbet til sg, fordi Mihcamárat er sg i lulesamisk. 


! Son lea vihtta jagi boaris.
! Sån la vidá jagák.
NP -> %num jahki@n boaris@adj { 1[case=gen] _ 3[lem=jagák] } ;



PP -> "NP post" 1: NP %post { 1[case=(if (2.lem = miehtáj) acc else 1.case)] _ 2 } 
      | "pre/post NP" 2: %pr NP ?(1.adpos/tl = post) { 2[lemcase=1.lemcase,case=(if (1.lem = miehtáj) acc else 2.case)] _ 1[lemcase=2.lemcase] }  !miehtá beavddi > bievde miehtáj
      | "pre NP" 1: %pr NP { 1 _ 2 } !maŋŋá bargoáiggi > maŋŋela barggoájge px1sg
     ; !

NegVP ->  "ii dadjat_verbs@conneg ieš.case acc"  5:  ii@vblex.iv.neg [dadjat_verbs]@vblex.*.conneg %ieš@prn.ref n.*.acc 
 { 1[lemcase=$lemcase] _ 2 _ %3[pos_tag=prn,prn_type=pers,person=3.poss,number=3.poss,lem=(if (3.poss=px1sg or 3.poss=px1du or 3.poss=px1pl) mån elif (3.poss=px2sg or 3.poss=px2du or 3.poss=px2pl) dån else sån)] _ liehket@vblex.indic.pres.p3.[4.number] _ 4[case=nom]} !!! Ii jáhkkán alddis dávdda. > Ittjij jáhke sujna la dávdda.
    ;


NegVP ->  "ii lohkat_verbs@conneg ess"  3:  ii@vblex.iv.neg %[lohkat_verbs]@vblex.*.conneg adj.ess  { %2[conneg="",tense=1.tense,person=1.person,number=1.number] _ 1 _ liehket@vblex.iv.indic.pres.conneg _ 3[number=sg,case=nom]} !!! ii loga váttisin > javllá ij la gássjel
!     | "ii conneg"  3:  ii@vblex.iv.neg %vblex.*.conneg  { 1[lemcase=$lemcase] _ %2 } 
    | 
    "ii conneg vblex"  3:  ii@vblex.iv.neg %vblex.*.conneg vblex  { 1[lemcase=$lemcase] _ %2 _ 3} 
    | "ii NP conneg"  3:  ii@vblex.iv.neg NP %vblex.*.conneg  { 1[lemcase=$lemcase,tense=3.tense] _ 2 _ %3[tense=""] } 
    | "ii PRN conneg"  3:  ii@vblex.iv.neg PRN %vblex.*.conneg  { 1[lemcase=$lemcase,tense=3.tense] _ 2 _ %3[tense=""] } 
    | "ii conneg NP"  3:  ii@vblex.iv.neg %vblex.*.conneg n { 1[lemcase=$lemcase] _ 3 _ %2 } 
    | "ii conneg PRN"  3:  ii@vblex.iv.neg %vblex.*.conneg prn ?(3.prn_type not = ref) { 1[lemcase=$lemcase] _ 3[foc=(if (3.lem in prnnotfocsmj) "" else 3.foc)] _ %2 } 
    | "ii NP conneg vblex"  3:  ii@vblex.iv.neg NP vblex.*.conneg %vblex { 1[lemcase=$lemcase,tense=3.tense]  _ %3[mood=3.mood,tense=""] _ 2 _ 4 } 
    | "ii conneg NP vblex, også dadjat_verbs"  6:  ii@vblex.iv.neg %vblex.*.conneg NP  vblex { 1[lemcase=$lemcase] _ %2[mood=2.mood,conneg=2.conneg]  _ 3[case=(if (3.case=acc and 2.lem in dadjat_verbs) nom else 3.case)] _ 4[infin=(if (3.case=acc and 2.lem in dadjat_verbs) "" else 4.infin),mood=(if (3.case=acc and 2.lem in dadjat_verbs) indic else ""),tense=pres,person=(if (3.case=acc and 2.lem in dadjat_verbs) p3 else ""),number=(if (3.case=acc and 2.lem in dadjat_verbs) 3.number else "")] } 
    !!! in jáhke nieidda boahtit > iv jáhke næjttso boahtá
    | "ii conneg PRN vblex, også dadjat_verbs"  6:  ii@vblex.iv.neg %vblex.*.conneg prn  vblex { 1[lemcase=$lemcase] _ %2[mood=2.mood,conneg=2.conneg]  _ 3[case=(if (3.case=acc and 2.lem in dadjat_verbs) nom else 3.case)] _ 4[infin=(if (3.case=acc and 2.lem in dadjat_verbs) "" else 4.infin),mood=(if (3.case=acc and 2.lem in dadjat_verbs) indic else ""),tense=(if (3.case=acc and 2.lem in dadjat_verbs) pres else ""),person=(if (3.case=acc and 2.lem in dadjat_verbs) p3 else ""),number=(if (3.case=acc and 2.lem in dadjat_verbs) 3.number else "")] }  
    !!! ii jáhke su/dan boahtit > iv jáhke sån/dat boahtá
    | "ii dadjat_verbs@conneg PRN n.ess"  6:  ii@vblex.iv.neg %[dadjat_verbs]@vblex.*.conneg prn.*.acc  NP.*.ess { 1[lemcase=$lemcase] _ %2  _ 3[case=nom] _ liehket(vblex)[trans=iv,mood=indic,tense=2.tense,person=3.person,number=3.number] _ 4[number=3.number,case=nom] }  
    !!! ii jáhke su nieidan
    | "ii dadjat_verbs@conneg PRN adj"  6:  ii@vblex.iv.neg %[dadjat_verbs]@vblex.*.conneg prn.*.acc  adj { 1[lemcase=$lemcase] _ %2  _ 3[case=nom] _ liehket@vblex.iv.indic.[2.tense][person=3.person,number=3.number] _ 4[number=3.number,case=nom] }  
    !!! ii jáhke su dohkalažžan
    | "ii AdvP conneg"  3:  ii@vblex.iv.neg AdvP %vblex.*.conneg  { 1[lemcase=$lemcase,tense=3.tense] _ 2 _ %3[tense=""] } 
    | "ii pcle conneg"  3:  ii@vblex.iv.neg pcle %vblex.*.conneg  { 1[lemcase=$lemcase,tense=3.tense] _ 2 _ %3[tense=""] } 
    ;

V ->    "aux condverb"   5: %[auxverbs]@vblex.*.cond ?(1.qst="")  { %1[lemcase=$lemcase, trans=""] }
      | "aux condverb.q" 4: %[auxverbs]@vblex.*.cond ?(1.qst=qst) { %1[qst="",lemcase=$lemcase] _ gus@pcle.qst }
      | "condverb.q"     3:            %vblex.*.cond ?(1.qst=qst) { liehket@vblex.iv.cond.[1.person_number][lemcase=1.lemcase] _  gus@pcle.qst _ %1[mood="",infin=inf] }
      | "condverb"       2:            %vblex.*.cond              { liehket@vblex.iv.cond.[1.person_number][lemcase=$lemcase] _ %1[mood="",tense="",infin=inf] } ! boađášin > luluv boahtet
      | "deriv enkeltverb" 1:     %vblex.*.der_passl   { %1(vblex_der_vblex)[lemcase=$lemcase]} !
      | "enkeltverb"       1:     %vblex.*.$function               { %1[lemcase=$lemcase,infin=(if (1.function = "@←ADVL") supn else 1.infin)]} !
      | "livččii verb"     3: leat@vblex.*.cond %vblex { 1[lemcase=$lemcase] _ %2} 
    | "aux inf"     2: %vblex.*.$person.$number."@+FAUXV" vblex.*."@-FMAINV"   { %1[lemcase=$lemcase]  _ 2 }   ! sáhtán borrat
    | "aux inf NP"     3: %vblex.*.$person.$number."@+FAUXV" vblex.*."@-FMAINV" NP  { %1[lemcase=$lemcase] _ 3  _ 2 }   ! sáhtán láibbi borrat
    | "aux NP inf NP"     3: %vblex.*.$person.$number."@+FAUXV" NP vblex.*."@-FMAINV" NP  { %1[lemcase=$lemcase] _ 2 _ 4  _ 3 }   
    | "aux PRN inf NP"     3: %vblex.*.$person.$number."@+FAUXV" PRN vblex.*."@-FMAINV" NP  { %1[lemcase=$lemcase] _ 2 _ 4  _ 3 }   
    | "aux AdvP inf NP"     3: %vblex.*.$person.$number."@+FAUXV" AdvP vblex.*."@-FMAINV" NP  { %1[lemcase=$lemcase] _ 2 _ 4  _ 3 }   
    !!! Hæhttu dågålattjat máná kultuvrraduogátjav vieledit. 
    | "aux inf PRN"     2: %vblex.*.$person.$number."@+FAUXV" vblex.*."@-FMAINV" PRN ?(1.lem not = ii)  { %1[lemcase=$lemcase] _ 3  _ 2 }   ! sáhtán láibbi borrat
    | "aux NP inf "     2: %vblex.*.$person.$number."@+FAUXV" NP vblex.*."@-FMAINV"   { %1[lemcase=$lemcase] _ 2  _ 3 }   ! sáhtán láibbi borrat
     ;

VP -> ! "leat vblex" 1: %[auxverbs]@V V   { %1[lemcase=$lemcase]  _ 2 }   ! lean borran
 !   1: %NegVP { %1 }
!    |  
    2: prn.pers.*.nom %NegVP { %2[lemcase=1.lemcase] }
    |  2: prn.pers.*.nom %NegVP AP { %2[lemcase=1.lemcase] _ 3 }
    |  2: prn.pers.*.nom %NegVP NP { %2[lemcase=1.lemcase] _ 3 }
!    |  2:                NegVP %V { 1[lemcase=$lemcase]  _ %2 } 
    |  2:                NegVP %V NP { 1[lemcase=$lemcase]  _ %2 _ 3 } 
    |  3: prn.pers.*.nom %NegVP vblex { %2[lemcase=1.lemcase]  _ 3 } 
!    | "vblex vblex"     1: V.*."@+FAUXV" %V.*.inf."@-FMAINV"   { 1[lemcase=$lemcase]  _ %2 }   ! sáhtán borrat
    | "vblex vblex NP"     2: V.trans.mood.$person.$number."@+FAUXV" %V.*."@-FMAINV" NP.*.acc  { 1[lemcase=$lemcase] _ 3 _ %2 }   !  
    | "vblex vblex NP"     2: V.trans.mood.$person.$number."@+FAUXV" pcle %V.*."@-FMAINV" NP  { 1[lemcase=$lemcase] _ 2 _ 4 _ %3 }   !  
    | "vblex AdvP vblex"     1: V AdvP %V    { 1[lemcase=$lemcase] _ 2 _ %3 }   ! 
    | "vblex pcle vblex"     1: V pcle %V    { 1[lemcase=$lemcase] _ 2 _ %3 }   ! 
    | "vblex pcle vblex NP"     1: V pcle %V NP    { 1[lemcase=$lemcase] _ 2 _ 4 _ %3 }   ! 
    | "vblex NP vblex"     2: V.*."@-FMAINV" NP %vblex    { 1[lemcase=$lemcase] _ 2 _ %3[infin=(if (1.lem incl smj-supn-triggerverbs) supn  else 3.infin)] }   ! hvordan legge til betingelsen 'and 1.lem not in not-usually-supn-verbs' ?
     | "dadjat_verbs prn.pers.acc ess"     4: [dadjat_verbs]@vblex prn.pers.*.acc %adj    { 1[lemcase=$lemcase] _ 2[case=nom] _ liehket(vblex)[trans=iv,mood=indic,tense=1.tense,person=2.person,number=2.number] _ %3[number=2.number,case=nom] } 
     !!!Son lohká sin duđavaččat > Sån javllá sij li dudálattja
     | "dadjat_verbs prn.pers.acc vblex.inf"     4: [dadjat_verbs]@vblex prn.pers.*.acc %vblex.*.inf    { 1[lemcase=$lemcase] _ 2[case=nom] _ %3[infin="",mood=indic,tense=1.tense,person=2.person,number=2.number] } 
     !!!jáhkká su váikkuhit > jáhkká sån vájkkut
     | "dadjat_verbs prn.dem.acc vblex.inf"     4: [dadjat_verbs]@vblex prn.dem.*.acc %vblex.*.inf    { 1[lemcase=$lemcase] _ 2[case=nom] _ %3[infin="",mood=indic,tense=1.tense,person=p3,number=2.number] } 
     !!!jáhkká dan váikkuhit > jáhkká dat vájkkut
     | "dadjat_verbs prn.acc vblex.prfprc"     4: [dadjat_verbs]@vblex prn.*.acc %vblex.*.prfprc    { 1[lemcase=$lemcase] _ 2[case=nom] _ liehket(vblex)[trans=iv,mood=indic,tense=pres,person=2.person,number=2.number] _ 3 } 
     !!!lohká sin árvvoštallan > javllá sij li árvustallam DON'T FUNCTION
     | "dadjat_verbs n.acc vblex.inf"     4: [dadjat_verbs]@vblex n.*.acc %vblex.*.inf    { 1[lemcase=$lemcase] _ 2[case=nom] _ %3[infin="",mood=indic,tense=1.tense,person=p3,number=2.number] } 
     !!!jáhkká skuvlla váikkuhit > jáhkká skåvllå vájkkut
    | "dadjat_verbs ieš.case ess"  5:  %[dadjat_verbs]@vblex ieš@prn.ref adj.*.ess 
 { 1[lemcase=$lemcase] _ %2[pos_tag=prn,prn_type=pers,person=2.poss,number=2.poss,case=nom,lem=(if (2.poss=px1sg or 2.poss=px1du or 2.poss=px1pl) mån elif (2.poss=px2sg or 2.poss=px2du or 2.poss=px2pl) dån else sån)] _ liehket(vblex)[trans=iv,mood=indic,tense=pres,person=2.poss,number=2.poss] _ 3[number=2.poss,case=nom]} 
 	 !!! Son lohká iežaset duđavažžan. > Sån javllá sij li dudálattja.

    | "vblex NP vblex"     2: V.*."@+FMAINV" NP %vblex    { 1[lemcase=$lemcase] _ 2 _ %3[infin=(if (1.lem incl smj-supn-triggerverbs) supn  else 3.infin)] }   ! hvordan legge til betingelsen 'and 1.lem not in not-usually-supn-verbs' ?
!    | "vblex NP vblex"     1: V NP %V    { 1[lemcase=$lemcase] _ 2 _ %3 }   ! 
    | "vblex NP AdvP"     1: %V NP AdvP    { %1[lemcase=$lemcase] _ 2 _ 3 }   ! 
    | "vblex NP AP"     1: %V NP AP    { %1[lemcase=$lemcase] _ 2 _ 3 }   ! 
    | "vblex NP AP C"     1: %V NP AP C    { %1[lemcase=$lemcase] _ 2 _ 3 _ 4 }   ! 
    | "vblex PRN AP C"     1: %V PRN AP C    { %1[lemcase=$lemcase] _ 2 _ 3 _ 4 }   ! 
    ;

S -> 2: prn.pers %V.*.$function (if (1.person_number in first_sec_person_number and  1.person_number= 2.person_number) 
        { %2[lemcase=1.lemcase,lemcase=$lemcase] } elif (2.lem = ij) 
        { %2[lemcase=1.lemcase,lemcase=$lemcase] } else { 1 _ %2 }) !Mun boran  > Båråv 
    | 3: prn.pers %VP.$function (if (1.person_number in first_sec_person_number and  1.person_number= 2.person_number) 
        { %2[lemcase=1.lemcase] } else { 1 _ %2 }) !Mun ferten borrat  > Båråv             
    | 2: C prn.pers %V NP (if (2.person_number in first_sec_person_number and  2.person_number= 3.person_number) 
        { 1 _ 4 _ %3[lemcase=1.lemcase] } else { 1 _ 2 _ 4 _ %3 }) !Mun boran  > Båråv 
    ;


VP -> "verb + adv"   %VP   AdvP   { 1[lemcase=$lemcase] _ 2 }
	 |                %VP   pcle   { 1[lemcase=$lemcase] _ 2 }
 	 |                %VP   pcle AdvP   { 1[lemcase=$lemcase] _ 2 _ 3 }
    ;  



VP ->         1: %VP PP    { %1[lemcase=$lemcase] _ 2 }  
    |         2: %NegVP PP    { %1[lemcase=$lemcase] _ 2 }   
    |         2: %NegVP AdvP    { %1[lemcase=$lemcase] _ 2 }   
    |         2: %NegVP PP AdvP    { %1[lemcase=$lemcase] _ 2 _ 3 }    
    |         1: %VP PP AdvP    { %1[lemcase=$lemcase] _ 2 _ 3 }    
    |         2: %NegVP PP pcle    { %1[lemcase=$lemcase] _ 2 _ 3 }    
    |         1: %VP PP pcle    { %1[lemcase=$lemcase] _ 2 _ 3 }    
    |         2: %NegVP NP    { %1[lemcase=$lemcase] _ 2 }
!    |         1: %VP NP    { %1[lemcase=$lemcase] _ 2 }
    |         2: %NegVP NP AdvP   { %1[lemcase=$lemcase] _ 2 _ 3 }    
    |         1: %VP NP AdvP   { %1[lemcase=$lemcase] _ 2 _ 3 }    
    |         1: %VP NP pcle   { %1[lemcase=$lemcase] _ 2 _ 3 }    
    |         3: %VP NP PP { %1[lemcase=$lemcase] _ 2 _ 3}    
    | "V adj" 1: %leat@vblex AP {%1[lemcase=$lemcase] _ 2}
    | "V NP ine" 2: %[ill2ine_verbs]@vblex NP.*.ill {1[lemcase=$lemcase] _ %2[case=ine] } ! Mun báhcen gávpogii > stadan
    | "V NP ill" 2: %[acc2ill_verbs]@vblex NP.*.acc {1[lemcase=$lemcase] _ %2[case=ill] } ! 
!   | "V NP ine" 2: %vblex NP.*.ill {1[lemcase=$lemcase] _ %2[case=(if (1.lem incl ill2ine_verbs) ine)]}
    ;

VP -> vblex cnjcoo %vblex { 1[lemcase=$lemcase] _ 2 _ 3 } 
     ;



!VP -> %V.tv NP
!      {
!        1
!        _ 2[case=(if (2.semtag = sem_food and 2.case = loc) ela
!                else 2.case)]
!      } ;
!
!VP -> NP %V.tv 
!      {
!        1[case=(if (1.semtag = sem_food and 1.case = loc) ela
!                else 1.case)]
!        _ 2
!      } ;
!
!      
!VP -> NP %V.tv { 1 _ 2 } ;
!
!VP -> AdvP %VP { 1 _ %2 } ;
!VP -> %VP AdvP { %1 _ 2 } ;
!
!
!!echo 'boratgo? borat go láibbi? láibbi go borat? > båråk? lájbev båråk? lájbev båråk?
!V: _.trans.pcle ;
!!V -> %vblex { 1 } ;
!V -> %V go@pcle.qst [$qst=qst] { %1 } ;
!
!VP -> NP go@pcle.qst %V.tv { 1 _ 3[qst=qst] } ;
!
!
!

C -> %cnjcoo {1} 
   | %cnjsub {1}
   ;

PCLE -> %pcle {1} ;

S -> "TEST1" %PRN V.*."@+FMAINV" [placetimeadv]@AdvP  {%1 _ 3 _ 2} 
     | "TEST1" [placetimeadv]@AdvP NP  %V.*."@+FMAINV" {1 _ %3 _ 2} 
     | "TEST2" %NP V AdvP  {%1 _ 2 _ 3} 
     | "TEST3" %NP V aj@AdvP NP  {%1 _ 2 _ 4 _ 3}
     | "TEST4" AdvP %S {1 _ %2 } 
	 ;

S ->! "NP VP" NP %VP { 1[lemcase=$lemcase] _ 2 } 
    !|  
    "NP VP NP" NP %VP NP { 1[lemcase=$lemcase] _ %2 _ 3 } 
    | "NP VP pcle" NP %VP pcle { 1[lemcase=$lemcase] _ %2 _ 3 } 
    | "NP VP NP" NP %VP NP { 1[lemcase=$lemcase] _ %2 _ 3 } 
    | "NP VP pcle NP" NP %VP pcle NP { 1 _ %2 _ 3 _ 4 } 
    | AdvP NP %VP { 1 _ 2 _ %3  }
    | C NP %VP { 1 _ 2 _ %3  }
!    | AdvP NP %V (if (1.function="@ADVLqst-ine→" or 1.function="@ADVLqst-ela→") { 1 _ %3 _ 2  } else { 1 _ 2 _ %3 }) ! Gos áhččát lea? > Gånnå la áhttját?
    | AdvP %VP NP { 1 _ %2 _ 3  }
    | NP pcle %VP { 1 _ 2 _ %3 }
    | %V ahte@C (if (1.function="@+FMAINV") { %1 } else { %1 _ 2 }) 
    !!!lohká ahte > lohká 
    | "vblex NP AP C"    %VP NP AP C    { %1[lemcase=$lemcase] _ 2 _ 3 _ 4 }   ! 
     | S %NP { 1 _ %2 } !Mun boran láibbi > Båråv lájbev
     | %S AdvP { 2[lemcase=1.lemcase] _ %1[lemcase=2.lemcase] } !Mun boran odne > Båråv lájbev
!     | %S AP { 1 _ %2 } !
    ;


S -> "S ahte S" S.*."@+FMAINV" ahte@C %S { 1 _ %3  } 
     | "S C S" S C %S { 1 _ 2 _ %3  } 
     | C %S { 1 _ %2 } 
    ;

!S -> NP."@→SUBJ" VP |
!     VP NP."@←SUBJ" ;
